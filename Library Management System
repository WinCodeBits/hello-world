
  /* This program has been prepared by  " Gaurav Anand  &  Manish Kumar "
     as a project for submission in BCA 2nd yr. Practical Exam 2012-15 at
     A.N. College, Patna for the Undergraduate Exam of Magadh University  */



// The following Header Files have been used in this program

#include<stdio.h>
#include<conio.h>
#include<string.h>
#include<ctype.h>
#include<stdlib.h>



// The following variables have been declared globally

    int n=6,n1=6,n2=10,n3=5;
    int x=18,x1=18,x2=18,x3=17;
    char chr1=219,chr=175;
    char ch1,ch2;
    int au=0,us=1;
    int xy,ab;



/* The following User-defined functions have been used in the program */


void Start(void);           // Defines the appearance of the Start Screen
void NewUser(void);         // Creates a new user
void Login(void);           // Manages User Login
void MainMenu(void);        // Defines the Main Menu
void MemMenu(void);         // Defines the Member Menu
void BookMenu(void);        // Defines the Book Menu
void IBMenu(void);          // Defines the Book Issue Menu
void ChangePassword(void);  // Password Change Menu
void AddMem(void);          // Adds new member(s)
void DelMem(void);          // Deletes member(s)
void MemList(void);         // Displays member list
void MemDetail(void);       // Searches for member(s)
void EditMem(void);         // Edits member data
void SrcBook(void);         // Searches book(s)
void ViewBookList(void);    // Shows Books' List
void Issue(void);           // Issues book(s)
void Deposit(void);         // Deposits book(s)
void Purchase(void);        // Purchases book(s)
void AddBook(void);         // Adds book(s)
void EditBook(void);        // Edits book(s)
void DeleteBook(void);      // Removes book(s)
void Order(void);           // Orders New book(s)
void SearchOrder(void);     // Searches for Ordered Book(s)
void ViewOrder(void);       // Shows Ordered Book(s) List
void SearchIssue(void);     // Searches Issued Book(s)
void ViewIssue(void);       // Views Issued Book(s) List
void LogOut(void);          // Manages User LogOut
void Help(void);            // Displays Help for the program
void About(void);           // Displays the details of the programmers
void Instruction(void);     // Provides Instructions to the User


// These functions control the appearance of the program

void rectangle(int x,int y,int l, int b,int bgcolor ,int fgcolor);
void rectangle1(int x,int y,int l, int b,int bgcolor ,int fgcolor);
void fillcolor(int x1, int y1,int x2,int y2,int color1,int color2);
void Animation();
void OpenWindow(void);
void CloseWindow(void);
void Loading(void);


void MKDIR(void);           // Creates a New directory if it doesn't exist
void DisplayTime()          // Displays Time & Date
{
 char datebuf[9];
 char timebuf[9];

 _strdate(datebuf);
 _strtime(timebuf);
 gotoxy(3,3);
 cprintf("Date : %s",datebuf);
 gotoxy(63,3);
 cprintf("Time : %s",timebuf);
}

void Menu(char *msg)        // Creates the interface for menus
{
    rectangle(1,1,79,25,4,2);
    fillcolor(2,2,78,24,6,2);
    textbackground(GREEN);
    textcolor(BLACK);
    DisplayTime();
    textcolor(RED);
    textcolor(BLACK);
    rectangle(31,2,49,4,3,2);
    gotoxy(32,3);
    printf("%c",chr1);
    textbackground(GREEN);
    textcolor(BLUE);
    gotoxy(33,3);
    cprintf("%s",msg);
    rectangle(2,6,78,20,3,2);
    textbackground(CYAN);
    textcolor(BLACK);
    for(xy=7;xy<=19;xy++)
    {
     for(ab=3;ab<=77;ab++)
     {
      gotoxy(ab,xy);
      cprintf(" ");
     }
    }
}

void Oframe(void)           // Creates other interfaces
{
   clrscr();
   rectangle1(1,1,79,25,1,4);
   fillcolor(2,2,78,24,7,1);
   textbackground(GREEN);
   textcolor(BLACK);
   DisplayTime();
   rectangle(21,4,60,6,3,5);
   gotoxy(22,5);
   textcolor(RED);
   cprintf("A.N. College Library Management System");
}


/* The following structure defines a datatype for storing the details of the
   members of the library */

struct Mlist
{
 char code[30];             // It is unique and gets assigned automatically
 char name[30];
 char cat[30];              // T : Teacher &  S : Student
 char sex[30];              // M : Male    &  F : Female
 char mob[15];
 char addr[80];
};

struct Mlist Ml;



/* The following structure defines a datatype for storing the details of the
   books of the library */

struct Blist
{
 char Bcode[30];            // It is unique and gets assigned automatically
 char Bname[30];
 char Bcat[30];             // Type of Book
 char Bauthor[30];
 char Brack[30];            // Location of Book
 char Bqnt[30];             // No. of copies of the book
 char Ono[30];              // Order No.
 char Odate[30];            // Order Date
 char Sname[30];            // Supplier's Name
 char Idate[30];            // Issue Date
 char Ddate[30];            // Scheduled Deposit Date
 char Mcode[30];            // Code of the Member who currently possesses it
 char Mname[30];            // This Member's Name
};

struct Blist Bl;



/* The following structure defines a datatype for storing the details of the
   book suppliers */

struct Slist
{
 char Sname[20];            // Supplier's Name
};

struct Slist Sl;


// The main() function

void main(void)
{
 MKDIR();
 Start();
}


// Defines the appearance of the Start Screen

void Start()
{
   if(us==1)
   {
    textbackground(BLACK);
    clrscr();
    fillcolor(3,2,77,24,10,0);
    rectangle(1,1,79,25,6,6);
    rectangle(2,1,78,25,6,6);
    textcolor(RED);
    textbackground(GREEN);
    rectangle(26,4,54,6,1,2);
    gotoxy(27,5);
    textcolor(RED);
    textbackground(GREEN);

    cprintf(" Library Management System ");
    gotoxy(25,10);
    textcolor(BLACK);
    cprintf("  Designed and Programmed by : ");
    rectangle(30,13,48,15,0,3);
    gotoxy(31,14);
    textcolor(BLUE);
    textbackground(CYAN);

    cprintf(" 1. Manish Kumar ");
    rectangle(30,17,48,19,1,2);
    gotoxy(31,18);
    textcolor(RED);
    textbackground(CYAN);
    cprintf(" 2. Gaurav Anand ");
    delay(3000);
    textbackground(BLACK);
    textcolor(WHITE);
    us++;
   }
   textbackground(BLACK);
   textcolor(WHITE);
   Oframe();
   textbackground(GREEN);
   textcolor(BLACK);
   gotoxy(4,9);
   cprintf("Welcome to the \" A.N. College Library Management System \". Here, you'll be\n");
   gotoxy(4,10);
   cprintf("able to manage all the activities of the library using a simple menu-based\n");
   gotoxy(4,11);
   cprintf("system that allows  you to add/remove members, issue/deposit books etc.   ");
   gotoxy(4,13);
   textcolor(RED);
   cprintf(" Please enter your 'username' and 'password' to log into the Main Menu ...");
   rectangle(19,16,61,22,1,3);
   textbackground(GREEN);
   textcolor(BLACK);
   gotoxy(20,18);
   cprintf("  Enter UserName :                       ");
   gotoxy(20,20);
   cprintf("  Enter Password :                       ");
   Login();
}


// Creates a New User if the program is running for the first time

void NewUser(void)
{
     char user[25],ps[25],ps1[25],np,np1;
     int x=0;
     FILE *fp;
     fp=fopen("c:/LIBMAN/AuthData.LPW","ab+");
     Oframe();
     textbackground(GREEN);
     textcolor(BLACK);
     gotoxy(4,9);
     cprintf("Welcome to the \" A.N. College Library Management System \". Here, you'll be\n");
     gotoxy(4,10);
     cprintf("able to manage all the activities of the library using a simple menu-based\n");
     gotoxy(4,11);
     cprintf("system that allows  you to add/remove members, issue/deposit books etc.   ");
     gotoxy(4,13);
     textcolor(RED);
     cprintf(" Please enter the required data below in order to create a new user ...");
     textbackground(WHITE);
     textcolor(BLACK);

     DisplayTime();
     rectangle(17,16,63,22,1,3);
     textbackground(GREEN);
     textcolor(BLACK);

     gotoxy(18,18);
     cprintf(" Enter New UserName   :                      ");
     gotoxy(18,19);
     cprintf(" Enter New Password   :                      ");
     gotoxy(18,20);
     cprintf(" Confirm New Password :                      ");
     gotoxy(42,18);
     textcolor(BLUE);
     scanf("%s",&user);
     gotoxy(42,19);
     while((np=getch())!=13)
     {
      textcolor(BLUE);
      cprintf("*");
      ps[x]=np;
      x++;
     }
     ps[x]='\0';
     gotoxy(42,20);
     x=0;
     while((np1=getch())!=13)
     {
      textcolor(BLUE);
      cprintf("*");
      ps1[x]=np1;
      x++;
     }
     ps1[x]='\0';
     if(strcmp(ps,ps1)==0)
     {
      textbackground(GREEN);
      textcolor(BLUE);
      gotoxy(2,24);
      cprintf("        Data Saved Successfully !!! Please Login again to continue ...       ");
      textcolor(BLACK);
      fprintf(fp,"%s %s",user,ps);
      fclose(fp);
      delay(1000);
      Start();
     }
     else
     {
      textbackground(GREEN);
      textcolor(BLUE);
      gotoxy(2,24);
      cprintf("                  Passwords Do Not Match !!! Please Retry...                 ");
      textcolor(BLACK);
      fclose(fp);
      remove("c:/LIBMAN/AuthData.LPW");
      delay(1000);
      Start();
     }
}



// Controls User Login

void Login(void)
{
  char user[25],pass[25];
  char p,n[25],m[25];
  int j=0;
  FILE *fp;
  fp=fopen("c:/LIBMAN/AuthData.LPW","rt");
  if(au>=3)
  {
   textbackground(GREEN);
   textcolor(RED);
   gotoxy(2,24);
   cprintf("     You've failed to login thrice !!! Please restart the application !!!    ");
   textcolor(BLACK);
   gotoxy(75,24);
   delay(1000);
   exit(0);
  }
  if(fp==NULL)
  {
     fclose(fp);
     NewUser();
  }
  if(feof(fp))
  {
     fclose(fp);
     NewUser();
  }

  fscanf(fp,"%s %s",user,pass);
  gotoxy(39,18);
  textbackground(WHITE);
  textcolor(BLACK);

  scanf("%s",&n);
  gotoxy(39,20);
  j=0;
  while( ( p=getch() ) != 13 )
  {
   textbackground(GREEN);
   textcolor(BLUE);

   cprintf("*");
   m[j]=p;
   j++;
  }
  m[j]='\0';
  if((strcmp(m,pass) != 0)||( strcmp(n,user) != 0 ))
  {
    textbackground(GREEN);
    textcolor(RED);
    gotoxy(2,24);
    cprintf("              Invalid Username or Password !!! Please retry ...              ");
    delay(1000);
    ++au;
    Start();
  }

  fclose(fp);
  textbackground(GREEN);
  textcolor(BLUE);

  gotoxy(2,24);
  cprintf("                      You have Logged In Successfully !!!                    ");
  au=0;
  delay(1000);
  textbackground(BLACK);
  textcolor(WHITE);
  clrscr();
  OpenWindow();
  MainMenu();
}


// Creates the Main Menu & controls its functions

void MainMenu(void)
{
 int x=18,i,n=6;
 textbackground(BLACK);
 textcolor(WHITE);
 Menu("   Main Menu    ");
 textcolor(RED);
 gotoxy(30,8);
 cprintf("1.  Member Operations     ");
 gotoxy(30,10);
 cprintf("2.  Book Operations       ");
 gotoxy(30,12);
 cprintf("3.  Issue Book Operations ");
 gotoxy(30,14);
 cprintf("4.  Change Password       ");
 gotoxy(30,16);
 cprintf("5.  Help                  ");
 gotoxy(30,18);
 cprintf("6.  LogOut                ");

 gotoxy(26,x) ;
 cprintf("%c",chr) ;
 gotoxy(32,3);

 do
 {
  do
  {
   do
   {
       ch1 = getch() ;
       if ( ch1 == 27 )
       {
	clrscr() ;
	exit(0) ;
       }
   } while (( ch1 != 0 ) && ( ch1 != 13 )) ;

   if ( ch1 != 13 )
   {
    do
    {
     ch2 = getch() ;
     if ( ch2 == 27 )
     {
	 clrscr() ;
	 exit(0) ;
     }
    } while (( ch2 != 72 ) && ( ch2 != 80 )	&& ( ch2 != 13 )) ;
   }
  } while ((( ch1 != 0 ) || (( ch2 != 72 ) && ( ch2 != 80 ))) && (( ch1 != 13 ) && ( ch2 != 13 ))) ;

  if (( ch1 == 0 ) && ( ch2 == 80 ))
  {
     gotoxy(26,x) ;
     cprintf(" ") ;
     if (n == 6)
     {
      n = 1 ;
      x = x - 10 ;
     }
     else
     {
      n = n + 1 ;
      x = x + 2 ;
     }
     gotoxy(26,x) ;
     cprintf("%c",chr) ;
     gotoxy(32,3) ;
     sound(200) ;
     delay(30) ;
     nosound() ;
  }
  if (( ch1 == 0 ) && ( ch2 == 72 ))
  {
     gotoxy(26,x) ;
     cprintf(" ") ;
     if ( n == 1 )
     {
      n = 6 ;
      x = x + 10 ;
     }
     else
     {
      n = n - 1 ;
      x = x - 2 ;
     }
     gotoxy(26,x) ;
     cprintf("%c",chr) ;
     gotoxy(32,3) ;
     sound(200) ;
     delay(30) ;
     nosound() ;
  }
 } while (( ch1 != 13 ) && ( ch2 != 13 )) ;

 switch(n)
 {
    case 1:
	  MemMenu();
	  break;

    case 2:
	  BookMenu();
	  break;

    case 3:
	  IBMenu();
	  break;

    case 4:
	  ChangePassword();
	  break;

    case 5:
	  Help();
	  break;

    case 6:
	  LogOut();
	  break;

    default :
	clrscr();
	DisplayTime();
	gotoxy(24,13);
	cprintf("ERROR : Wrong Choice, Try Again...");
	getch();
	break;
 }
 getch();
}


// Creates the Member Operations Menu & controls its functions

void MemMenu(void)
{
  textbackground(BLACK);
  textcolor(WHITE);

  do
  {
    Menu("  Member Menu   ");
    gotoxy(30,8);
    cprintf("1.  Add New Member(s)");
    gotoxy(30,10);
    cprintf("2.  View All Members");
    gotoxy(30,12);
    cprintf("3.  Search Member(s)");
    gotoxy(30,14);
    cprintf("4.  Edit Member(s)");
    gotoxy(30,16);
    cprintf("5.  Delete Member(s)");
    gotoxy(30,18);
    cprintf("6.  Return To Main Menu");

    gotoxy(26,x1) ;
    cprintf("%c",chr) ;
    gotoxy(32,3) ;
    do
    {
     do
     {
      do
      {
       ch1 = getch() ;
       if ( ch1 == 27 )
       {
	clrscr() ;
	exit(0) ;
       }
      } while (( ch1 != 0 ) && ( ch1 != 13 )) ;
      if ( ch1 != 13 )
      {
       do
       {
	ch2 = getch() ;
	if ( ch2 == 27 )
	{
	 clrscr() ;
	 exit(0) ;
	}
       } while (( ch2 != 72 ) && ( ch2 != 80 )	&& ( ch2 != 13 )) ;
     }
    } while ((( ch1 != 0 ) || (( ch2 != 72 ) && ( ch2 != 80 ))) && (( ch1 != 13 ) && ( ch2 != 13 ))) ;

    if (( ch1 == 0 ) && ( ch2 == 80 ))
    {
     gotoxy(26,x1) ;
     cprintf(" ") ;
     if (n1 == 6)
     {
      n1 = 1 ;
      x1 = x1 - 10 ;
     }
     else
     {
      n1 = n1 + 1 ;
      x1 = x1 + 2 ;
     }
     gotoxy(26,x1) ;
     cprintf("%c",chr) ;
     gotoxy(32,3) ;
     sound(200) ;
     delay(30) ;
     nosound() ;
    }
    if (( ch1 == 0 ) && ( ch2 == 72 ))
    {
     gotoxy(26,x1) ;
     cprintf(" ") ;
     if ( n1 == 1 )
     {
      n1 = 6 ;
      x1 = x1 + 10 ;
     }
     else
     {
      n1 = n1 - 1 ;
      x1 = x1 - 2 ;
     }
     gotoxy(26,x1) ;
     cprintf("%c",chr) ;
     gotoxy(32,3) ;
     sound(200) ;
     delay(30) ;
     nosound() ;
    }
   } while (( ch1 != 13 ) && ( ch2 != 13 )) ;



    switch(n1)
    {
     case 1:
	   AddMem();
	   break;

     case 2:
	   MemList();
	   break;

     case 3:
	   MemDetail();
	   break;

     case 4:
	   EditMem();
	   break;

     case 5:
	   DelMem();
	   break;

     case 6:
	   MainMenu();

     default:
	    clrscr();
	    DisplayTime();
	    gotoxy(24,13);
	    cprintf("ERROR : Wrong Choice, Try Again...");
	    getch();
	    break;
    }
   }while(n1!=6);
}


// Creates the Book Menu & controls its functions

void BookMenu(void)
{
  textbackground(BLACK);
  textcolor(WHITE);

  do
  {
    Menu("   Book Menu    ");
    textbackground(CYAN);
    textcolor(BLACK);
    gotoxy(30,9);
    cprintf("01.  Add New Book(s)");
    gotoxy(30,10);
    cprintf("02.  View All Books");
    gotoxy(30,11);
    cprintf("03.  Search Book(s)");
    gotoxy(30,12);
    cprintf("04.  Edit Book(s)");
    gotoxy(30,13);
    cprintf("05.  Delete Book(s)");
    gotoxy(30,14);
    cprintf("06.  Order Book(s)");
    gotoxy(30,15);
    cprintf("07.  View Order Book(s)");
    gotoxy(30,16);
    cprintf("08.  Search Order Book(s)");
    gotoxy(30,17);
    cprintf("09.  Purchase Book(s)");
    gotoxy(30,18);
    cprintf("10.  Return To Main Menu");
    gotoxy(26,x2) ;
    cprintf("%c",chr) ;
    gotoxy(32,3) ;
    do
    {
     do
     {
      do
      {
       ch1 = getch() ;
       if ( ch1 == 27 )
       {
	clrscr() ;
	exit(0) ;
       }
      } while (( ch1 != 0 ) && ( ch1 != 13 )) ;
      if ( ch1 != 13 )
      {
       do
       {
	ch2 = getch() ;
	if ( ch2 == 27 )
	{
	 clrscr() ;
	 exit(0) ;
	}
       } while (( ch2 != 72 ) && ( ch2 != 80 )	&& ( ch2 != 13 )) ;
      }
    } while ((( ch1 != 0 ) || (( ch2 != 72 ) && ( ch2 != 80 ))) && (( ch1 != 13 ) && ( ch2 != 13 ))) ;
    if (( ch1 == 0 ) && ( ch2 == 80 ))
    {
     gotoxy(26,x2) ;
     cprintf(" ") ;
     if (n2 == 10)
     {
      n2 = 1 ;
      x2 = x2 - 9 ;
     }
     else
     {
      n2 = n2 + 1 ;
      x2 = x2 + 1 ;
     }
     gotoxy(26,x2) ;
     cprintf("%c",chr) ;
     gotoxy(32,3) ;
     sound(200) ;
     delay(30) ;
     nosound() ;
    }
    if (( ch1 == 0 ) && ( ch2 == 72 ))
    {
     gotoxy(26,x2) ;
     cprintf(" ") ;
     if ( n2 == 1 )
     {
      n2 = 10 ;
      x2 = x2 + 9 ;
     }
     else
     {
      n2 = n2 - 1 ;
      x2 = x2 - 1 ;
     }
     gotoxy(26,x2) ;
     cprintf("%c",chr) ;
     gotoxy(32,3) ;
     sound(200) ;
     delay(30) ;
     nosound() ;
    }
  } while (( ch1 != 13 ) && ( ch2 != 13 )) ;

    switch(n2)
    {
     case 1:
	 AddBook();
	 break;

     case 2:
	 ViewBookList();
	 break;

     case 3:
	 SrcBook();
	 break;

     case 4:
	 EditBook();
	 break;

     case 5:
	 DeleteBook();
	 break;

     case 6:
	 Order();
	 break;

     case 7:
	 ViewOrder();
	 break;

     case 8:
	 SearchOrder();
	 break;

     case 9:
	 Purchase();
	 break;

     case 10:
	 MainMenu();
	 break;

     default:
	 clrscr();
	 DisplayTime();
	 gotoxy(24,13);
	 cprintf("ERROR : Wrong Choice, Try Again...");
	 getch();
	 break;
   }

  }while(n2!=10);
}


// Creates the Book Issue/Deposit Menu & controls its functions

void IBMenu(void)
{
  textbackground(BLACK);
  textcolor(WHITE);

  do
  {
    Menu("   Issue Menu   ");
    textbackground(CYAN);
    textcolor(BLACK);
    gotoxy(30,9);
    cprintf("1.  Issue Book(s)");
    gotoxy(30,11);
    cprintf("2.  View All Issued Books");
    gotoxy(30,13);
    cprintf("3.  Search Issued Book(s)");
    gotoxy(30,15);
    cprintf("4.  Deposit Book(s)");
    gotoxy(30,17);
    cprintf("5.  Return To Main Menu");
    gotoxy(26,x3) ;
    cprintf("%c",chr) ;
    gotoxy(31,3) ;
    do
    {
     do
     {
      do
      {
       ch1 = getch() ;
       if ( ch1 == 27 )
       {
	clrscr() ;
	exit(0) ;
       }
      } while (( ch1 != 0 ) && ( ch1 != 13 )) ;
     if ( ch1 != 13 )
     {
      do
      {
       ch2 = getch() ;
       if ( ch2 == 27 )
       {
	clrscr() ;
	exit(0) ;
       }
      } while (( ch2 != 72 ) && ( ch2 != 80 )	&& ( ch2 != 13 )) ;
     }
    } while ((( ch1 != 0 ) || (( ch2 != 72 ) && ( ch2 != 80 ))) && (( ch1 != 13 ) && ( ch2 != 13 ))) ;
    if (( ch1 == 0 ) && ( ch2 == 80 ))
    {
     gotoxy(26,x3) ;
     cprintf(" ") ;
     if (n3 == 5)
     {
      n3 = 1 ;
      x3 = x3 - 8 ;
     }
     else
     {
      n3 = n3 + 1 ;
      x3 = x3 + 2 ;
     }
     gotoxy(26,x3) ;
     cprintf("%c",chr) ;
     gotoxy(31,3) ;
     sound(200) ;
     delay(30) ;
     nosound() ;
    }
    if (( ch1 == 0 ) && ( ch2 == 72 ))
    {
     gotoxy(26,x3) ;
     cprintf(" ") ;
     if ( n3 == 1 )
     {
      n3 = 5 ;
      x3 = x3 + 8 ;
     }
     else
     {
      n3 = n3 - 1 ;
      x3 = x3 - 2 ;
     }
     gotoxy(26,x3) ;
     cprintf("%c",chr) ;
     gotoxy(31,3) ;
     sound(200) ;
     delay(30) ;
     nosound() ;
    }
    } while (( ch1 != 13 ) && ( ch2 != 13 )) ;
    switch(n3)
    {
     case 1:
	Issue();
	break;

     case 2:
	ViewIssue();
	break;

     case 3:
	SearchIssue();
	break;

     case 4:
	Deposit();
	break;

     case 5:
	MainMenu();
	break;

     default:
	 clrscr();
	 DisplayTime();
	 gotoxy(24,13);
	 cprintf("ERROR : Wrong Choice, Try Again...");
	 getch();
	 break;
    }

  }while(n3!=5);
}


// Changes User Authentication Password

void ChangePassword(void)
{
    char user[20],pass[20],np[20],np1[20],p,p1;
    int j=0;
    char c;
    FILE *fp,*ft;
    textbackground(BLACK);
    textcolor(WHITE);
    Menu("Change Password ");
    fp=fopen("c:/LIBMAN/AuthData.LPW","rt");
    if(fp==NULL)
    {
     Menu("Change Password ");
     gotoxy(34,13);
     printf("FATAL ERROR!!!");
     delay(300);
     exit(0);
    }

    if(feof(fp))
    {
     Menu("Change Password ");
     gotoxy(34,13);
     printf("FATAL ERROR!!!");
     delay(300);
     exit(0);
    }

    ft=fopen("c:/LIBMAN/Temp.LPW","ab+");
    gotoxy(10,13);
    cprintf(" Are You Sure you want to change the Authentication Password?  ");
    c=getch();
    if(toupper(c)=='Y')
    {
     Menu("Change Password ");
     gotoxy(29,12);
     cprintf("Enter New Password    : ");
     gotoxy(29,14);
     cprintf("Confirm New Password  : ");
     gotoxy(53,12);
     while( ( p=getch() ) != 13 )
     {
      cprintf("*");
      np[j]=p;
      j++;
     }
     np[j]='\0';
     gotoxy(53,14);
     j=0;
     while( ( p1=getch() ) != 13 )
     {
      cprintf("*");
      np1[j]=p1;
      j++;
     }
     np1[j]='\0';
     if(strcmp(np,np1)==0)
     {
      fscanf(fp,"%s %s",user,pass);
      fprintf(ft,"%s %s",user,np);
      fclose(fp);
      fclose(ft);
      remove("c:/LIBMAN/AuthData.LPW");
      rename("c:/LIBMAN/Temp.LPW","c:/LIBMAN/AuthData.LPW");
      gotoxy(24,24);
      textbackground(GREEN);
      textcolor(BLACK);
      cprintf(" Password Changed Successfully !!!");
      delay(300);
      MainMenu();
     }
     else
     {
      gotoxy(20,24);
      textbackground(GREEN);
      textcolor(BLACK);

      cprintf("Passwords do not Match !!! Please Retry...");
      delay(300);
      fclose(fp);
      fclose(ft);
      remove("c:/LIBMAN/Temp.LPW");
      ChangePassword();
     }
    }
    else
    {
     fclose(fp);
     fclose(ft);
     remove("c:/LIBMAN/Temp.LPW");
     MainMenu();
    }
}


// Manages User LogOut & re-login

void LogOut(void)
{
  clrscr();
  textbackground(BLACK);
  textcolor(WHITE);
  CloseWindow();
  Start();
}


// Creates & displays the Help Menu

void Help(void)
{
    int ch,i;
    textbackground(BLACK);
    textcolor(WHITE);
    Menu("   Help Menu    ");
    textbackground(CYAN);
    textcolor(BLACK);

    gotoxy(30,8);
    cprintf("1.  Member Operations");
    gotoxy(30,10);
    cprintf("2.  Book Operations");
    gotoxy(30,12);
    cprintf("3.  Book Issue Operations");
    gotoxy(30,14);
    cprintf("4.  User Authentication");
    gotoxy(30,16);
    cprintf("5.  About");
    gotoxy(30,18);
    cprintf("6.  Return To Main Menu");

    gotoxy(26,x1) ;
    cprintf("%c",chr) ;
    gotoxy(32,3) ;
    do
    {
     do
     {
      do
      {
       ch1 = getch() ;
       if ( ch1 == 27 )
       {
	clrscr() ;
	exit(0) ;
       }
      } while (( ch1 != 0 ) && ( ch1 != 13 )) ;
      if ( ch1 != 13 )
      {
       do
       {
	ch2 = getch() ;
	if ( ch2 == 27 )
	{
	 clrscr() ;
	 exit(0) ;
	}
       } while (( ch2 != 72 ) && ( ch2 != 80 )	&& ( ch2 != 13 )) ;
     }
    } while ((( ch1 != 0 ) || (( ch2 != 72 ) && ( ch2 != 80 ))) && (( ch1 != 13 ) && ( ch2 != 13 ))) ;

    if (( ch1 == 0 ) && ( ch2 == 80 ))
    {
     gotoxy(26,x1) ;
     cprintf(" ") ;
     if (n1 == 6)
     {
      n1 = 1 ;
      x1 = x1 - 10 ;
     }
     else
     {
      n1 = n1 + 1 ;
      x1 = x1 + 2 ;
     }
     gotoxy(26,x1) ;
     cprintf("%c",chr) ;
     gotoxy(32,3) ;
     sound(200) ;
     delay(30) ;
     nosound() ;
    }
    if (( ch1 == 0 ) && ( ch2 == 72 ))
    {
     gotoxy(26,x1) ;
     cprintf(" ") ;
     if ( n1 == 1 )
     {
      n1 = 6 ;
      x1 = x1 + 10 ;
     }
     else
     {
      n1 = n1 - 1 ;
      x1 = x1 - 2 ;
     }
     gotoxy(26,x1) ;
     cprintf("%c",chr) ;
     gotoxy(32,3) ;
     sound(200) ;
     delay(30) ;
     nosound() ;
    }
   } while (( ch1 != 13 ) && ( ch2 != 13 )) ;
    textbackground(BLACK);
    textcolor(WHITE);
    Menu("   Help Menu    ");
    textbackground(CYAN);
    textcolor(BLACK);


    switch(n1)
    {
     case 1:
	   goto H1;


     case 2:
	   goto H2;


     case 3:
	   goto H3;


     case 4:
	   goto H4;


     case 5:
	   About();


     case 6:
	   MainMenu();

     default:
	    clrscr();
	    DisplayTime();
	    gotoxy(24,13);
	    printf("ERROR : Wrong Choice, Try Again...");
	    getch();
	    break;
    }

   H1:
   gotoxy(3,7);

  textcolor(RED);
  cprintf("Member Operations");
  textcolor(BLACK);
  gotoxy(6,9); cprintf("To Add/Remove/View/Search/Edit Members, choose '1' from the \"Main Menu\".");
  gotoxy(3,10); cprintf("You'll enter \"Member Operations Menu\". To Add a new member, enter required");
  gotoxy(3,11); cprintf("data. The member will be added and assigned a code automatically. To Remove");
  gotoxy(3,12); cprintf("existing members, enter the member code. All the details of the member will");
  gotoxy(3,13); cprintf("be displayed. Press 'Y' to remove the member.");
  gotoxy(16,15); cprintf("To View all members, choose '2'. All existing members will be ");
  gotoxy(3,16); cprintf("displayed in tabular form. To Search/Edit members'data, choose appropriate");
  gotoxy(3,17); cprintf("option & enter member code. You'll be shown the member's details. If you");
  gotoxy(3,18); cprintf("want to edit data, press 'Y' and re-enter all the data except member code.");

  textbackground(GREEN);
  gotoxy(2,22);
  cprintf(" ***  Member Code can't be changed/deleted even while Removing/Editing a     ");
  gotoxy(2,23);
  cprintf("      member. Use UnderScores i.e. \"_\" instead of spaces while entering data.");
  gotoxy(32,3);
  getch();
  Help();

  H2:
  gotoxy(3,7);
  textcolor(RED);
  cprintf("Book Operations");
  textcolor(BLACK);
  gotoxy(6,9); cprintf("To Add/Remove/View/Search/Edit/Order/Buy books, choose '2'from the \"Main");
  gotoxy(3,10); cprintf("Menu\". You'll enter \"Member Operations Menu\". To Add a new book, enter the");
  gotoxy(3,11); cprintf("required data. The book will be added and assigned a code automatically. To");
  gotoxy(3,12); cprintf("Search/Edit/Remove Books, enter the book code. The details of the book will");
  gotoxy(3,13); cprintf("be displayed. You can also view the books in tabular form. ");
  gotoxy(16,15); cprintf("To Order new books, enter the required details. The books will");
  gotoxy(3,16); cprintf("be purchased using the Purchase Menu. You can also view and search for any");
  gotoxy(3,17); cprintf("ordered book. The purchased books will be added to the list of books in the");
  gotoxy(3,18); cprintf("library automatically.");
  textbackground(GREEN);
  gotoxy(2,22);
  cprintf(" ***  Book Code cannot be changed/deleted during any operation.              ");
  gotoxy(2,23);
  cprintf("      Use UnderScores i.e. \"_\" instead of spaces while entering data.        ");
  gotoxy(32,3);
  getch();
  Help();

  H3:
  gotoxy(3,7);
  textcolor(RED);
  cprintf("Book Issue/Deposit");
  textcolor(BLACK);
  gotoxy(6,9); cprintf("To Issue/Deposit books, choose '3'from the \"Main Menu\". To issue a book,");
  gotoxy(3,10); cprintf("enter the code of the member to whom the book is to be issued. The details");
  gotoxy(3,11); cprintf("of the member will be displayed & you'll be asked if you want to issue any");
  gotoxy(3,12); cprintf("book to this member. Press 'Y' to confirm/Any Other Key to decline. If 'Y'");
  gotoxy(3,13); cprintf("is pressed you'll be asked the book code and issue/deposit dates.");
  gotoxy(8,15); cprintf("To deposit books, enter the member code, then Press 'Y'/'N' when asked");
  gotoxy(3,16); cprintf("if you wish to deposit that book. To confirm, Press 'Y'. You can also view");
  gotoxy(3,17); cprintf("all issued books in a tabular form. Searching an issued book can be done by");
  gotoxy(3,18); cprintf("by entering the book code. ");
  textbackground(GREEN);
  gotoxy(2,22);
  cprintf(" ***  Books have to be returned within 7 days of the date of issue.          ");
  gotoxy(2,23);
  cprintf("      Use UnderScores i.e. \"_\" instead of spaces while entering data.        ");
  gotoxy(32,3);
  getch();
  Help();


  H4:
  gotoxy(3,7);
  textcolor(RED);
  cprintf("User Authentication");
  textcolor(BLACK);
  gotoxy(6,9); cprintf("To use the application, you have to pass the user authentication stage.");
  gotoxy(3,10); cprintf("i.e. you have to enter your 'username' and 'password'. This is done to keep");
  gotoxy(3,11); cprintf("the data safe from illegal access. You can attempt only thrice successively");
  gotoxy(3,12); cprintf("to log in. If you fail thrice, you need to restart the program. If you log ");
  gotoxy(3,13); cprintf("out while using the program, you need to re-login before using the program ");
  gotoxy(8,15); cprintf("You can change the authentication password once you have logged in to ");
  gotoxy(3,16); cprintf("program. To do so, choose '4' from the \"Main Menu\". After this, enter the");
  gotoxy(3,17); cprintf("new password twice. The new password can now be used to log into program.  ");
  gotoxy(3,18); cprintf("Username, however, cannot be changed.");

  textbackground(GREEN);
  gotoxy(2,22);
  cprintf(" ***  The authentication password should be strong enough to foil any attempt");
  gotoxy(2,23);
  cprintf("      at guessing it. The password should be memorized or stored safely.     ");
  gotoxy(32,3);
  getch();
 Help();
}



// Displays information about the programmers who created this program

void About(void)
{
  textbackground(BLACK);
  textcolor(WHITE);
  Oframe();
  textbackground(GREEN);
  textcolor(BLUE);

  gotoxy(2,12);
  cprintf(" This program has been prepared by \"Manish Kumar (R.N.:40)\" & \"Gaurav Anand  ");
  gotoxy(2,13);
  cprintf(" (R.N.:23) for their project to be submitted in BCA 2nd yr. Practical Exam   ");
  gotoxy(2,14);
  cprintf(" 2012-15 at  \"Anugrah Narayan College, Patna-13\"  for the Undergraduate Exam ");
  gotoxy(2,15);
  cprintf(" of  \"Magadh University (BodhGaya)\".                                         ");
  gotoxy(2,24);
  textbackground(CYAN);
  textcolor(RED);
  cprintf(" Press Any Key to go back to Help Menu ... ");
  getch();
  Help();
}



// Adds a new member

void AddMem(void)
{
 int n;
 char ch='Y';
 struct Mlist Ml;
 FILE *fp;
 HERE:
 fp=fopen("c:/LIBMAN/Projectd.LPW","ab+");
 while(!feof(fp))
 {
  textbackground(BLACK);
  textcolor(WHITE);

  clrscr();
  fscanf(fp,"%s %s %s %s %s %s",Ml.code,Ml.name,Ml.cat,Ml.sex,Ml.addr,Ml.mob);
  if(feof(fp))
  {
   n=atoi(Ml.code);
   break;
  }
 }
 fseek(fp,0,SEEK_END);
 itoa(n+1,Ml.code,10);
 Menu("Add Member Menu ");
 textcolor(RED);
 textbackground(GREEN);
 if(n<10)
 { gotoxy(57,5); cprintf(" No. of Members = 0%d ",n);}
 else
 { gotoxy(58,5); cprintf(" No. of Members = %d ",n); }
 textcolor(BLACK);
 textbackground(CYAN);
 gotoxy(10,8);
 cprintf(" New Member Code             :: ");
 gotoxy(10,10);
 cprintf(" Enter Member Name           :: ");
 gotoxy(10,12);
 cprintf(" Enter Category              :: ");
 gotoxy(10,14);
 cprintf(" Enter Gender                :: ");
 gotoxy(10,16);
 cprintf(" Enter Address               :: ");
 gotoxy(10,18);
 cprintf(" Enter Mobile Number         :: ");
 gotoxy(50,8); textcolor(RED);  cprintf("%s",Ml.code);
 gotoxy(50,10); scanf("%s",&Ml.name);
 gotoxy(50,12); scanf("%s",&Ml.cat);
 gotoxy(50,14); scanf("%s",&Ml.sex);
 gotoxy(50,16); scanf("%s",&Ml.addr);
 gotoxy(50,18); scanf("%s",&Ml.mob);
 fprintf(fp,"%s %s %s %s %s %s\n",Ml.code,Ml.name,Ml.cat,Ml.sex,Ml.addr,Ml.mob);
 gotoxy(2,23);
 textcolor(BLUE);
 cprintf("       Want To Add More Members?   ::                                        ");
 fflush(stdin);
 gotoxy(50,23);
 ch=getche();
 if(toupper(ch) == 'Y')
 {
  fclose(fp);
  goto HERE;
 }
 fclose(fp);
 MemMenu();
}



// Displays the list of members (10 per page)

void MemList(void)
{
  int n,h,c;
  char ch='Y';
  struct Mlist Ml;
  FILE *fp;
  fp=fopen("c:/LIBMAN/Projectd.LPW","rt");
  if(fp == NULL)
  {
   Menu("View Member List");
   gotoxy(28,13);
   textcolor(RED);
   cprintf(" File doesn't exist !!! ");
   delay(2000);
   MemMenu();
  }
  if(feof(fp))
  {
    Menu("View Member List");
    gotoxy(24,13);
    textcolor(RED);
    gotoxy(32,13);
    cprintf(" File is Empty!!! ");
    delay(2000);
    MemMenu();
  }
  rewind(fp);

  while(!feof(fp))
  {
    textbackground(BLACK);
    textcolor(WHITE);
    clrscr();
    fscanf(fp,"%s %s %s %s %s %s",Ml.code,Ml.name,Ml.cat,Ml.sex,Ml.addr,Ml.mob);
    n=atoi(Ml.code);
  }
  fclose(fp);
  fp=fopen("c:/LIBMAN/Projectd.LPW","rt");
  while(!feof(fp))
  {
    START:
    textbackground(BLACK);
    textcolor(WHITE);
    Menu("View Member List");
    textbackground(GREEN);
    textcolor(RED);
    if(n<10)
    { gotoxy(57,5); cprintf(" No. of Members = 0%d ",n);}
    else
    { gotoxy(58,5); cprintf(" No. of Members = %d ",n); }
    textbackground(CYAN);
    textcolor(BLACK);
    fscanf(fp,"%s %s %s %s %s %s",Ml.code,Ml.name,Ml.cat,Ml.sex,Ml.addr,Ml.mob);
    if(feof(fp))
     break;
    gotoxy(4,7);
    textcolor(RED);
    cprintf("Code ");
    gotoxy(14,7);
    cprintf(" Name ");
    gotoxy(27,7);
    cprintf(" Category ");
    gotoxy(43,7);
    cprintf(" Sex ");
    gotoxy(52,7);
    cprintf(" Address ");
    gotoxy(66,7);
    cprintf(" Mobile No. ");
    textcolor(BLACK);
   for(h=9;h<=18;h++)
   {
    if(atoi(Ml.code) < 10)
    { gotoxy(5,h); cprintf("0"); cprintf("%s",Ml.code);  }
    else
    {
      gotoxy(5,h); cprintf("%s",Ml.code);
    }
    c=atoi(Ml.code);
    gotoxy(13,h); cprintf("%s",Ml.name);
    gotoxy(29,h); cprintf("%s",Ml.cat);
    gotoxy(44,h); cprintf("%s",Ml.sex);
    gotoxy(54,h); cprintf("%s",Ml.addr);
    gotoxy(68,h); cprintf("%s",Ml.mob);
    if(feof(fp))
     break;
    if(c==n)
     break;
    if(h<18)
     fscanf(fp,"%s %s %s %s %s %s",Ml.code,Ml.name,Ml.cat,Ml.sex,Ml.addr,Ml.mob);
   }
    gotoxy(2,23);
    textcolor(BLUE);
    cprintf("       Want To View More Members?   ::                                       ");
    textcolor(BLACK);
    fflush(stdin);
    gotoxy(50,23);
    ch=getche();
    if(toupper(ch) == 'Y')
     goto START;
    else
     break;
  }
  axz:
  if(feof(fp))
  {
   textbackground(GREEN);
   DisplayTime();
   gotoxy(2,23);
   textbackground(CYAN);
   textcolor(BLUE);
   cprintf("                        No more members in list !!!                          ");
   getch();
  }
  fclose(fp);
  MemMenu();
}


// Removes Members

void DelMem(void)
{
  int flag,zz=0;
  char x[8]="   --  ";
  char ch,mcode[30],ch1;
  struct Mlist Ml;
  FILE *fp,*ft;
  fp=fopen("c:/LIBMAN/Projectd.LPW","rt");
  textbackground(BLACK);
  textcolor(WHITE);
  if(fp==NULL)
  {
    Menu("Remove a Member ");
    gotoxy(25,12);
    cprintf(" File Does Not Exist, Try Later.");
    delay(2000);
    MemMenu();
  }
  if(feof(fp))
  {
    Menu("Remove a Member ");
    gotoxy(28,12);
    cprintf(" File is Empty, Try Later.");
    delay(2000);
    MemMenu();
  }
  Menu("Remove a Member ");
  gotoxy(25,13); cprintf(" Enter the code of the member  : ");
  gotoxy(59,13);
  scanf("%s",&mcode);
  rewind(fp);  /* Repositions file pointer to stream's beginning  */
  ft=fopen("c:/LIBMAN/Temp.LPW","ab+");
  fseek(ft,0,SEEK_END);
  while(!feof(fp))
  {
   textbackground(BLACK);
   textcolor(WHITE);
   clrscr();
   fscanf(fp,"%s %s %s %s %s %s",Ml.code,Ml.name,Ml.cat,Ml.sex,Ml.addr,Ml.mob);
   if(feof(fp))
    break;
   if(strcmp(Ml.code,mcode) != 0)
   {
    fprintf(ft,"%s %s %s %s %s %s\n",Ml.code,Ml.name,Ml.cat,Ml.sex,Ml.addr,Ml.mob);
   }
   else
   {
    textbackground(BLACK);
    textcolor(WHITE);
    zz=1;
    Menu("Remove a Member ");
    gotoxy(16,8);
    cprintf(" Member Code           :: ");
    gotoxy(16,10);
    cprintf(" Member Name           :: ");
    gotoxy(16,12);
    cprintf(" Category              :: ");
    gotoxy(16,14);
    cprintf(" Gender                :: ");
    gotoxy(16,16);
    cprintf(" Address               :: ");
    gotoxy(16,18);
    cprintf(" Mobile Number         :: ");
    gotoxy(50,8); cprintf("%s",&Ml.code);
    gotoxy(50,10); cprintf("%s",&Ml.name);
    gotoxy(50,12); cprintf("%s",&Ml.cat);
    gotoxy(50,14); cprintf("%s",&Ml.sex);
    gotoxy(50,16); cprintf("%s",&Ml.addr);
    gotoxy(50,18); cprintf("%s",&Ml.mob);
    gotoxy(2,23);
    textcolor(BLUE);
    cprintf("                       Want To Remove This Member? ::                        ");
    textcolor(BLACK);
    fflush(stdin);
    gotoxy(56,23);
    ch=getch();
    if(toupper(ch) == 'Y')
    {
     fprintf(ft,"%s %s %s %s %s %s\n",Ml.code,x,x,x,x,x);
    }
    else
    {
     fclose(fp);
     fclose(ft);
     remove("c:/LIBMAN/Temp.LPW");
     MemMenu();
    }
   }
  }
   Menu("Remove a Member ");
   fclose(fp);
   fclose(ft);
   gotoxy(5,23);
   remove("c:/LIBMAN/Projectd.LPW");
   rename("c:/LIBMAN/Temp.LPW","c:/LIBMAN/Projectd.LPW");
   if(zz==0){gotoxy(23,13); cprintf(" The Entered Code Doesn't Exist !!!"); goto THEER; }
   textcolor(RED);
   gotoxy(21,13); cprintf(" The member was successfully removed !!!");
   textcolor(BLACK);
   THEER:
   gotoxy(2,23);
   textcolor(BLUE);
   cprintf("                      Want to Remove Another Member? :                       ");
   textcolor(BLACK);
   gotoxy(57,23);
   ch1=getch();
   if(toupper(ch1) == 'Y')
    DelMem();
   else
    MemMenu();

}



// Searches for Members using Member Code

void MemDetail(void)
{
  int n,p,x;
  int m=1;
  char ch='Y';
  struct Mlist Ml;
  FILE *fp;
  fp=fopen("c:/LIBMAN/Projectd.LPW","rt");
  textbackground(BLACK);
  textcolor(WHITE);
  if(fp == NULL)
  {
   Menu("Search a Member ");
   gotoxy(24,13);
   cprintf(" File doesn't exist !!! ");
   delay(2000);
   MemMenu();
  }
  if(feof(fp))
  {
    Menu("Search a Member ");
    gotoxy(32,13);
    cprintf(" File is Empty!!! ");
    delay(2000);
    MemMenu();
  }
  rewind(fp);
  while(!feof(fp))
  {
    clrscr();
    fscanf(fp,"%s %s %s %s %s %s",Ml.code,Ml.name,Ml.cat,Ml.sex,Ml.addr,Ml.mob);
    if(feof(fp))
    {
     n=atoi(Ml.code);
     break;
    }
  }
  fclose(fp);
  START:
  fp=fopen("c:/LIBMAN/Projectd.LPW","rt");
  textbackground(BLACK);
  textcolor(WHITE);
  Menu("Search a Member ");
  gotoxy(25,13); cprintf(" Enter the code of the member  : ");
  gotoxy(59,13); scanf("%d",&p);
  if(p>n)
  {
   gotoxy(2,23);
   textcolor(BLUE);
   cprintf("                  End of File reached !!! Record not Found ...               ");
   textcolor(BLACK);
   delay(2000);
   MemMenu();
  }
  while(m<=p)
  {
    fscanf(fp,"%s %s %s %s %s %s",Ml.code,Ml.name,Ml.cat,Ml.sex,Ml.addr,Ml.mob);
    if(m == p)
    {
     break;
    }
    m=m+1;
  }
  textbackground(BLACK);
  textcolor(WHITE);
  textbackground(BLACK);
  textcolor(WHITE);
  Menu("Search a Member ");
  gotoxy(16,8);
  cprintf(" Member Code           :: ");
  gotoxy(16,10);
  cprintf(" Member Name           :: ");
  gotoxy(16,12);
  cprintf(" Category              :: ");
  gotoxy(16,14);
  cprintf(" Gender                :: ");
  gotoxy(16,16);
  cprintf(" Address               :: ");
  gotoxy(16,18);
  cprintf(" Mobile Number         :: ");
  gotoxy(50,8); cprintf("%s",&Ml.code);
  gotoxy(50,10); cprintf("%s",&Ml.name);
  gotoxy(50,12); cprintf("%s",&Ml.cat);
  gotoxy(50,14); cprintf("%s",&Ml.sex);
  gotoxy(50,16); cprintf("%s",&Ml.addr);
  gotoxy(50,18); cprintf("%s",&Ml.mob);
  gotoxy(2,23);
  textcolor(BLUE);
  cprintf("         Want To View Another Member? :                                      ");
  fflush(stdin);
  gotoxy(42,23);
  ch=getche();
  if(toupper(ch) == 'Y')
  {
   m=1;
   fclose(fp);
   goto START;
  }
  fclose(fp);
  MemMenu();
}



// Edits a member's data

void EditMem(void)
{
  int flag;
  char yes,mcode[30],yes1;
  struct Mlist Ml;
  FILE *fp,*ft;
  fp=fopen("c:/LIBMAN/Projectd.LPW","rt");
  textbackground(BLACK);
  textcolor(WHITE);
  if(fp==NULL)
  {
   Menu(" Edit a Member  ");
   gotoxy(29,13);
   cprintf(" File Does Not Exist !!!");
   delay(2000);
   MemMenu();
  }
  if(feof(fp))
  {
   Menu(" Edit a Member  ");
   gotoxy(32,13);
   cprintf(" File is Empty !!!");
   delay(2000);
   MemMenu();
  }
  textbackground(BLACK);
  textcolor(WHITE);
  Menu(" Edit a Member  ");
  gotoxy(25,13); cprintf(" Enter the code of the member  : ");
  gotoxy(59,13);
  scanf("%s",&mcode);
  flag=0;
  rewind(fp);  /* Repositions file pointer to stream's beginning  */
  ft=fopen("c:/LIBMAN/Temp.LPW","ab+");
  fseek(ft,0,SEEK_END);
  while(!feof(fp))
  {
   textbackground(BLACK);
   textcolor(WHITE);
   clrscr();
   fscanf(fp,"%s %s %s %s %s %s",Ml.code,Ml.name,Ml.cat,Ml.sex,Ml.addr,Ml.mob);
   if(feof(fp))
    break;
   if(strcmp(Ml.code,mcode)==0)
   {
    flag=1;
    Menu(" Edit a Member  ");
    gotoxy(16,8);
    cprintf(" Member Code           :: ");
    gotoxy(16,10);
    cprintf(" Member Name           :: ");
    gotoxy(16,12);
    cprintf(" Category              :: ");
    gotoxy(16,14);
    cprintf(" Gender                :: ");
    gotoxy(16,16);
    cprintf(" Address               :: ");
    gotoxy(16,18);
    cprintf(" Mobile Number         :: ");
    gotoxy(50,8); cprintf("%s",&Ml.code);
    gotoxy(50,10); cprintf("%s",&Ml.name);
    gotoxy(50,12); cprintf("%s",&Ml.cat);
    gotoxy(50,14); cprintf("%s",&Ml.sex);
    gotoxy(50,16); cprintf("%s",&Ml.addr);
    gotoxy(50,18); cprintf("%s",&Ml.mob);
    gotoxy(2,23);
    cprintf("                     Want To Edit This Member's data? :                      ");
    fflush(stdin);
    gotoxy(58,23);
    yes=getche();
    if(yes=='Y'||yes=='y')
    {
     textbackground(BLACK);
     textcolor(WHITE);
     Menu(" Edit a Member  ");
     gotoxy(10,8);
     cprintf(" Member Code                     :: ");
     gotoxy(10,10);
     cprintf(" Enter New Member Name           :: ");
     gotoxy(10,12);
     cprintf(" Enter New Category              :: ");
     gotoxy(10,14);
     cprintf(" Enter New Gender                :: ");
     gotoxy(10,16);
     cprintf(" Enter New Address               :: ");
     gotoxy(10,18);
     cprintf(" Enter New Mobile No.            :: ");
     gotoxy(50,8); cprintf("%s",Ml.code);
     gotoxy(50,10); scanf("%s",&Ml.name);
     gotoxy(50,12); scanf("%s",&Ml.cat);
     gotoxy(50,14); scanf("%s",&Ml.sex);
     gotoxy(50,16); scanf("%s",&Ml.addr);
     gotoxy(50,18); scanf("%s",&Ml.mob);
     gotoxy(2,23);
     textcolor(BLUE);
     cprintf("                   Member data has been updated Successfully !!!             ");
     textcolor(BLACK);
     fprintf(ft,"%s %s %s %s %s %s\n",Ml.code,Ml.name,Ml.cat,Ml.sex,Ml.addr,Ml.mob);
     delay(2000);
     continue;
    }
    else
    {
     fprintf(ft,"%s %s %s %s %s %s\n",Ml.code,Ml.name,Ml.cat,Ml.sex,Ml.addr,Ml.mob);
     fclose(fp); fclose(ft); remove("c:/LIBMAN/Temp.LPW");
     goto ZC;
    }
   }
   else
    fprintf(ft,"%s %s %s %s %s %s\n",Ml.code,Ml.name,Ml.cat,Ml.sex,Ml.addr,Ml.mob);
  }
  if(flag==0)
  {
   textbackground(BLACK);
   textcolor(WHITE);
   Menu(" Edit a Member  ");
   gotoxy(19,13);
   cprintf(" The Entered Member Code does not Exist !!! ");
   delay(2000);
   MemMenu();
  }
  fclose(fp);
  fclose(ft);
  remove("c:/LIBMAN/Projectd.LPW");
  rename("c:/LIBMAN/Temp.LPW","c:/LIBMAN/Projectd.LPW");
  textbackground(BLACK);
  textcolor(WHITE);
  clrscr();
  ZC:
  Menu(" Edit a Member  ");
  gotoxy(2,23);
  cprintf("                     Want To Edit Another Member's data? :                   ");
  fflush(stdin);
  gotoxy(61,23);
  yes1=getche();
  if(yes1=='Y'||yes1=='y')
  {
   EditMem();
  }
  else
  {
   MemMenu();
  }
}



// Displays instructions on how to use menus

void Instruction()
{
  char c1=24,c2=25;
  int i;
  for(i=2;i<=78;i++)
  {
   gotoxy(i,23);
   cprintf(" ");
  }
  gotoxy(7,23) ;
  cprintf("%c",c1) ;
  cprintf("%c",c2) ;
  cprintf(" = Move");
  gotoxy(32,23);
  cprintf("< ENTER > = Select");
  gotoxy(61,23);
  cprintf("< ESC > = Exit") ;
}


// Adds Books

void AddBook(void)
{
  char yes;
  long int l=0;
  struct Blist Bl;
  FILE *fp;
  fp=fopen("c:/LIBMAN/BookList.LPW","ab+");
  while(!feof(fp))
  {
   fscanf(fp,"%s %s %s %s %s %s",Bl.Bcode,Bl.Bname,Bl.Bauthor,Bl.Bcat,Bl.Brack,Bl.Bqnt);
   if(feof(fp))
    break;
  }
  l=atoi(Bl.Bcode);
  itoa(l+1,Bl.Bcode,10);
  fseek(fp,0,SEEK_END);
  textbackground(BLACK);
  textcolor(WHITE);
  Menu(" Add Book Menu  ");
  textbackground(GREEN);
  textcolor(RED);
  if(n<10)
  { gotoxy(59,5); cprintf(" No. of Books = 0%d ",n);}
  else
  { gotoxy(60,5); cprintf(" No. of Books = %d ",n); }
  textbackground(CYAN);
  textcolor(BLACK);
  gotoxy(10,8);
  cprintf("New Book Code          :: ");
  gotoxy(10,10);
  cprintf("Enter Book Name        :: ");
  gotoxy(10,12);
  cprintf("Enter Author Name      :: ");
  gotoxy(10,14);
  cprintf("Enter Category         :: ");
  gotoxy(10,16);
  cprintf("Enter Rack No.         :: ");
  gotoxy(10,18);
  cprintf("Enter Quantity         :: ");
  gotoxy(40,8);  textcolor(RED);
  cprintf("%s",Bl.Bcode);
  gotoxy(40,10); scanf("%s",&Bl.Bname);
  gotoxy(40,12); scanf("%s",&Bl.Bauthor);
  gotoxy(40,14); scanf("%s",&Bl.Bcat);
  gotoxy(40,16); scanf("%s",&Bl.Brack);
  gotoxy(40,18); scanf("%s",&Bl.Bqnt);
  fprintf(fp,"%s %s %s %s %s %s \n",Bl.Bcode,Bl.Bname,Bl.Bauthor,Bl.Bcat,Bl.Brack,Bl.Bqnt);
  gotoxy(2,23);
  textcolor(BLUE);
  cprintf("                        Want To Add More Books?  :                           ");
  fflush(stdin);
  gotoxy(53,23);
  yes=getche();
  if(toupper(yes)=='Y')
  {
   fclose(fp);
   AddBook();
  }
  else
  {
   fclose(fp);
   BookMenu();
  }

}


// Displays List of Books (10 per view)

void ViewBookList(void)
{
  int c=0,h,n=0;
  char yes;
  struct Blist Bl;
  FILE *fp;
  fp=fopen("c:/LIBMAN/BookList.LPW","rt");
  textbackground(BLACK);
  textcolor(WHITE);
  if(fp==NULL)
  {
   Menu(" View All Books ");
   gotoxy(23,13);
   cprintf("File Does Not Exist !!! Try Later...");
   delay(2000);
   BookMenu();
  }
  if(feof(fp))
  {
   Menu(" View All Books ");
   gotoxy(23,13);
   cprintf("File Does Not Exist !!! Try Later...");
   delay(2000);
   BookMenu();
  }
  rewind(fp);
  while(!feof(fp))
  {
   fscanf(fp,"%s %s %s %s %s %s",Bl.Bcode,Bl.Bname,Bl.Bauthor,Bl.Bcat,Bl.Brack,Bl.Bqnt);
   ++n;
   if(feof(fp))
    break;
  }
  START:
  rewind(fp);
  while(!feof(fp))
  {
   textbackground(BLACK);
   textcolor(WHITE);
   clrscr();
   fscanf(fp,"%s %s %s %s %s %s",Bl.Bcode,Bl.Bname,Bl.Bauthor,Bl.Bcat,Bl.Brack,Bl.Bqnt);
   if(feof(fp))
    break;
   Menu(" View All Books ");
   gotoxy(3,7);
   textcolor(RED);
   cprintf(" Code ");
   gotoxy(15,7);
   cprintf(" Name ");
   gotoxy(28,7);
   cprintf(" Author ");
   gotoxy(41,7);
   cprintf(" Category ");
   gotoxy(56,7);
   cprintf(" Rack No. ");
   gotoxy(68,7);
   cprintf(" Quantity ");
   textcolor(BLACK);
  for(h=9;h<=18;h++)
  {
   if(atoi(Bl.Bcode)<10)
   { gotoxy(5,h); cprintf("0"); cprintf("%s",Bl.Bcode);}
   else
   { gotoxy(5,h); cprintf("%s",Bl.Bcode);}
   ++c;
   gotoxy(13,h); cprintf("%s",Bl.Bname);
   gotoxy(28,h); cprintf("%s",Bl.Bauthor);
   gotoxy(42,h); cprintf("%s",Bl.Bcat);
   gotoxy(60,h); cprintf("%s",Bl.Brack);
   gotoxy(72,h); cprintf("%s",Bl.Bqnt);
   if(feof(fp))
    break;
   if(c==n-1)
    break;
   if(h<18)
    fscanf(fp,"%s %s %s %s %s %s",Bl.Bcode,Bl.Bname,Bl.Bauthor,Bl.Bcat,Bl.Brack,Bl.Bqnt);
  }
   if(feof(fp))
   {
    textcolor(BLUE);
    gotoxy(2,23); cprintf("                         No More Books Available !!!                         ");
    textcolor(BLACK);
    getch();
    BookMenu();
   }
   gotoxy(2,23);
   textcolor(BLUE);
   cprintf("                              Want To View More Books?  :                    ");
   textcolor(BLACK);
   fflush(stdin);
   yes=getche();
   if(yes=='Y'||yes=='y')
    goto START;
   else
   {
    fclose(fp);
    BookMenu();
   }
  }
  if(feof(fp))
  {
   textcolor(BLUE);
   gotoxy(2,23); cprintf("                         No More Books Available !!!                         ");
   getch();
   BookMenu();
  }
  gotoxy(2,23);
  textcolor(BLUE);
  cprintf("                              Want To View More Books?  :                    ");
  textcolor(BLACK);
  fflush(stdin);
  gotoxy(61,23);
  yes=getche();
  if(yes=='Y'||yes=='y')
   goto START;
  else
  {
   fclose(fp);
   BookMenu();
  }
}



// Searches books using Book Code

void SrcBook(void)
{
 int flag;
 char yes,bcode[30];
 struct Blist Bl;
 FILE *fp;
 fp=fopen("c:/LIBMAN/BookList.LPW","rt");
 textbackground(BLACK);
 textcolor(WHITE);
 if(fp==NULL)
 {
  Menu(" Search a Book  ");
  gotoxy(24,13);
  cprintf(" File Does Not Exist !!!");
  delay(2000);
  BookMenu();
 }
 if(feof(fp))
 {
  Menu(" Search a Book  ");
  gotoxy(25,13);
  cprintf(" File is Empty !!! Try Later ...");
  delay(2000);
  BookMenu();
 }
 START:
 textbackground(BLACK);
 textcolor(WHITE);
 Menu(" Search a Book  ");
 textcolor(BLUE);
 gotoxy(25,13); cprintf(" Enter the code of the book  :  ");
 textcolor(BLACK);
 gotoxy(59,13); scanf("%s",&bcode);
 flag=0;
 rewind(fp);  /* Repositions file pointer to stream's beginning  */
 while(!feof(fp))
 {
  textbackground(BLACK);
  textcolor(WHITE);
  clrscr();
  fscanf(fp,"%s %s %s %s %s %s",Bl.Bcode,Bl.Bname,Bl.Bauthor,Bl.Bcat,Bl.Brack,Bl.Bqnt);
  if(feof(fp))
   break;
  if(strcmp(Bl.Bcode,bcode)==0)
  {
   flag=1;
   Menu(" Search a Book  ");
   gotoxy(16,8);
   cprintf(" Book Code             :: ");
   gotoxy(16,10);
   cprintf(" Book Name             :: ");
   gotoxy(16,12);
   cprintf(" Author's Name         :: ");
   gotoxy(16,14);
   cprintf(" Category              :: ");
   gotoxy(16,16);
   cprintf(" Rack No.              :: ");
   gotoxy(16,18);
   cprintf(" Quantity              :: ");
   gotoxy(50,8); textcolor(RED); cprintf("%s",&Bl.Bcode);  textcolor(BLACK);
   gotoxy(50,10); cprintf("%s",&Bl.Bname);
   gotoxy(50,12); cprintf("%s",&Bl.Bauthor);
   gotoxy(50,14); cprintf("%s",&Bl.Bcat);
   gotoxy(50,16); cprintf("%s",&Bl.Brack);
   gotoxy(50,18); cprintf("%s",&Bl.Bqnt);
   goto THIS;
  }
 }
 if(flag==0)
 {
   textbackground(BLACK);
   textcolor(WHITE);
   Menu(" Search a Book  ");
   gotoxy(20,13);
   cprintf(" The book was not Found in the library !!!");
   delay(2000);
 }
 textbackground(BLACK);
 textcolor(WHITE);
 Menu(" Search a Book  ");
 THIS:
 gotoxy(2,23);
 textcolor(BLUE);
 cprintf("                         Want To Search More Books? :                        ");
 textcolor(BLACK);
 fflush(stdin);
 gotoxy(56,23);
 yes=getche();
 if(yes=='Y'||yes=='y')
  goto START;
 else
  fclose(fp);

}



// Edits a Book's data

void EditBook(void)
{
  int flag;
  char yes,bcode[30],yes1;
  struct Blist Bl;
  FILE *fp,*ft;
  fp=fopen("c:/LIBMAN/BookList.LPW","rt");
  textbackground(BLACK);
  textcolor(WHITE);
  if(fp==NULL)
  {
   Menu("  Edit a Book   ");
   gotoxy(23,13);
   cprintf("File Does Not Exist !!! Try Later...");
   delay(2000);
   BookMenu();
  }
  if(feof(fp))
  {
   Menu("  Edit a Book   ");
   gotoxy(23,13);
   cprintf("File Does Not Exist !!! Try Later...");
   delay(2000);
   BookMenu();
  }
  textbackground(BLACK);
  textcolor(WHITE);
  Menu("  Edit a Book   ");
  gotoxy(27,13);
  cprintf("Enter Book Code To Edit  :  ");
  scanf("%s",&bcode);
  flag=0;
  rewind(fp);  /* Repositions file pointer to stream's beginning  */
  ft=fopen("c:/LIBMAN/Temp.LPW","ab+");
  fseek(ft,0,SEEK_END);
  while(!feof(fp))
  {
   fscanf(fp,"%s %s %s %s %s %s",Bl.Bcode,Bl.Bname,Bl.Bauthor,Bl.Bcat,Bl.Brack,Bl.Bqnt);
   if(feof(fp))
    break;
   if(strcmp(Bl.Bcode,bcode)==0)
   {
    flag=1;
    textbackground(BLACK);
    textcolor(WHITE);
    Menu("  Edit a Book   ");
    gotoxy(20,8);
    cprintf("Book Code           ::  ");textcolor(RED); cprintf("%s ",Bl.Bcode); textcolor(BLACK);
    gotoxy(20,10);
    cprintf("Book Name           ::  %s ",Bl.Bname);
    gotoxy(20,12);
    cprintf("Author Name         ::  %s ",Bl.Bauthor);
    gotoxy(20,14);
    cprintf("Category            ::  %s ",Bl.Bcat);
    gotoxy(20,16);
    cprintf("Rack No.            ::  %s ",Bl.Brack);
    gotoxy(20,18);
    cprintf("Quantity            ::  %s ",Bl.Bqnt);
    gotoxy(2,23);
    textcolor(BLUE);
    cprintf("                     Want To Edit This Book's Info?  :                       ");
    fflush(stdin);
    gotoxy(58,23);
    yes=getche();
    if(yes=='Y'||yes=='y')
    {
     textbackground(BLACK);
     textcolor(WHITE);
     Menu("  Edit a Book   ");
     gotoxy(20,8);
     cprintf("Book Code            ::  ");textcolor(RED);  cprintf("%s",Bl.Bcode); textcolor(BLACK);
     gotoxy(20,10);
     cprintf("Book Name            ::  ");
     gotoxy(20,12);
     cprintf("Author Name          ::  ");
     gotoxy(20,14);
     cprintf("Category             ::  ");
     gotoxy(20,16);
     cprintf("Rack No.             ::  ");
     gotoxy(20,18);
     cprintf("Quantity             ::  ");
     gotoxy(45,10);     scanf("%s",&Bl.Bname);
     gotoxy(45,12);	scanf("%s",&Bl.Bauthor);
     gotoxy(45,14);	scanf("%s",&Bl.Bcat);
     gotoxy(45,16);     scanf("%s",&Bl.Brack);
     gotoxy(45,18);	scanf("%s",&Bl.Bqnt);
     fprintf(ft,"%s %s %s %s %s %s \n",Bl.Bcode,Bl.Bname,Bl.Bauthor,Bl.Bcat,Bl.Brack,Bl.Bqnt);
     gotoxy(2,23);
     textcolor(BLUE);
     cprintf("                   The Data Has Been Successfully Updated !!!                ");
     textcolor(BLACK);
     delay(2000);
     continue;
    }
    else
     fprintf(ft,"%s %s %s %s %s %s \n",Bl.Bcode,Bl.Bname,Bl.Bauthor,Bl.Bcat,Bl.Brack,Bl.Bqnt);
   }
   else
    fprintf(ft,"%s %s %s %s %s %s \n",Bl.Bcode,Bl.Bname,Bl.Bauthor,Bl.Bcat,Bl.Brack,Bl.Bqnt);
  }
  if(flag==0)
  {
   textbackground(BLACK);
   textcolor(WHITE);
   Menu("  Edit a Book   ");
   gotoxy(14,13);
   textcolor(RED);
   cprintf("The Entered Book Code Does Not Exist !!! Try Later...");
   delay(2000);
   BookMenu();
  }
  fclose(fp);
  fclose(ft);
  remove("c:/LIBMAN/BookList.LPW");
  rename("c:/LIBMAN/Temp.LPW","c:/LIBMAN/BookList.LPW");
  textbackground(BLACK);
  textcolor(WHITE);
  Menu("  Edit a Book   ");
  gotoxy(22,13);
  textcolor(BLUE);
  cprintf("Want To Edit Another Book's Info?  :  ");
  fflush(stdin);
  yes1=getche();
  if(yes1=='Y'||yes1=='y')
   EditBook();
  else
   BookMenu();
}



// Removes Books

void DeleteBook(void)
{
  int flag;
  char yes,bcode[30],yes1;
  struct Blist Bl;
  FILE *fp,*ft;
  fp=fopen("c:/LIBMAN/BookList.LPW","rt");
  textbackground(BLACK);
  textcolor(WHITE);
  if(fp==NULL)
  {
   Menu("  Delete Book   ");
   gotoxy(23,13);
   cprintf("File Does Not Exist !!! Try Later...");
   delay(2000);
   BookMenu();
  }
  if(feof(fp))
  {
   Menu("  Delete Book   ");
   gotoxy(23,13);
   cprintf("File Does Not Exist !!! Try Later...");
   delay(2000);
   BookMenu();
  }
  textbackground(BLACK);
  textcolor(WHITE);
  Menu("  Delete Book   ");
  gotoxy(26,13);
  textcolor(BLUE);
  cprintf("Enter Book Code To Delete  :  ");
  textcolor(BLACK);
  scanf("%s",&bcode);
  flag=0;
  rewind(fp);  /* Repositions file pointer to stream's beginning  */
  ft=fopen("c:/LIBMAN/Temp.LPW","ab+");
  fseek(ft,0,SEEK_END);
  while(!feof(fp))
  {
   textbackground(BLACK);
   textcolor(WHITE);
   clrscr();
   fscanf(fp,"%s %s %s %s %s %s",Bl.Bcode,Bl.Bname,Bl.Bauthor,Bl.Bcat,Bl.Brack,Bl.Bqnt);
   if(feof(fp))
    break;
   if(strcmp(Bl.Bcode,bcode)==0)
   {
    flag=1;
    textbackground(BLACK);
    textcolor(WHITE);
    Menu("  Delete Book   ");
    gotoxy(20,8);     cprintf("Book Code           :: ");textcolor(RED);  cprintf("%s ",Bl.Bcode); textcolor(BLACK);
    gotoxy(20,10);    cprintf("Book Name           :: %s ",Bl.Bname);
    gotoxy(20,12);    cprintf("Author Name         :: %s ",Bl.Bauthor);
    gotoxy(20,14);    cprintf("Category            :: %s ",Bl.Bcat);
    gotoxy(20,16);    cprintf("Rack No.            :: %s ",Bl.Brack);
    gotoxy(20,18);    cprintf("Quantity            :: %s ",Bl.Bqnt);
    gotoxy(2,23);
    textcolor(BLUE);
    cprintf("                        Want To Remove This Book?  :                         ");
    textcolor(BLACK);
    fflush(stdin);
    gotoxy(56,23);
    yes=getche();
    if(yes=='N'||yes=='n')
     fprintf(ft,"%s %s %s %s %s %s \n",Bl.Bcode,Bl.Bname,Bl.Bauthor,Bl.Bcat,Bl.Brack,Bl.Bqnt);
   }
   else
    fprintf(ft,"%s %s %s %s %s %s \n",Bl.Bcode,Bl.Bname,Bl.Bauthor,Bl.Bcat,Bl.Brack,Bl.Bqnt);
  }
  if(flag==0)
  {
   textbackground(BLACK);
   textcolor(WHITE);
   Menu("  Delete Book   ");
   gotoxy(14,13);
   textcolor(RED);
   cprintf("The Entered Book Code Does Not Exist !!! Try Later...");
   fclose(fp);
   fclose(ft);
   remove("c:/LIBMAN/Temp.LPW");
   delay(2000);
   BookMenu();
  }
  fclose(fp);
  fclose(ft);
  remove("c:/LIBMAN/BookList.LPW");
  rename("c:/LIBMAN/Temp.LPW","c:/LIBMAN/BookList.LPW");
  textbackground(BLACK);
  textcolor(WHITE);
  Menu("  Delete Book   ");
  gotoxy(24,13);
  textcolor(BLUE);
  cprintf(" Want To Remove Another Book?  :  ");
  fflush(stdin);
  yes1=getche();
  if(yes1=='Y'||yes1=='y')
   DeleteBook();
  else
   BookMenu();
}



// Orders for new books

void Order(void)
{
  char yes;
  struct Blist Bl;
  long int l;
  FILE *fp;
  fp=fopen("c:/LIBMAN/BookOrdr.LPW","ab+");
  yes='Y';
  textbackground(BLACK);
  textcolor(WHITE);
  while(yes=='y'||yes=='Y')
  {
   fseek(fp,0,1);
   while(!feof(fp))
   {
    fscanf(fp,"%s %s %s %s %s %s %s",Bl.Ono,Bl.Bname,Bl.Bauthor,Bl.Bcat,Bl.Sname,Bl.Bqnt,Bl.Odate);
    if(feof(fp))
     break;
   }
   l=atoi(Bl.Ono);
   l=l+1;
   itoa(l,Bl.Ono,10);
   textbackground(BLACK);
   textcolor(WHITE);
   Menu("Order Book Menu ");
   gotoxy(2,5);textbackground(GREEN); textcolor(RED);  cprintf(" Order No. : %s ",Bl.Ono);
   textcolor(BLACK);
   textbackground(CYAN);
   gotoxy(20,8);
   cprintf("Enter Book Name      :: ");
   gotoxy(20,10);
   cprintf("Enter Author Name    :: ");
   gotoxy(20,12);
   cprintf("Enter Category       :: ");
   gotoxy(20,14);
   cprintf("Enter Supplier Name  :: ");
   gotoxy(20,16);
   cprintf("Enter Quantity       :: ");
   gotoxy(20,18);
   cprintf("Enter Date Of Order  :: ");
   gotoxy(46,8); scanf("%s",Bl.Bname);
   gotoxy(46,10); scanf("%s",Bl.Bauthor);
   gotoxy(46,12); scanf("%s",Bl.Bcat);
   gotoxy(46,14); scanf("%s",Bl.Sname);
   gotoxy(46,16); scanf("%s",Bl.Bqnt);
   gotoxy(46,18); scanf("%s",Bl.Odate);
   fseek(fp,0,SEEK_END);
   fprintf(fp,"%s %s %s %s %s %s %s\n",Bl.Ono,Bl.Bname,Bl.Bauthor,Bl.Bcat,Bl.Sname,Bl.Bqnt,Bl.Odate);
   gotoxy(2,23);
   textcolor(BLUE);
   cprintf("                       Want To Order More Books?   :                         ");
   fflush(stdin);
   gotoxy(55,23);
   yes=getche();
   if(toupper(yes) != 'Y')
    BookMenu();
  }
  fclose(fp);
}



// Shows the list of Ordered Books

void ViewOrder(void)
{
  int h,n=0,c=0;
  char yes;
  struct Blist Bl;
  FILE *fp;
  fp=fopen("c:/LIBMAN/BookOrdr.LPW","rt");
  textbackground(BLACK);
  textcolor(WHITE);
  if(fp==NULL)
  {
   Menu("  View Ordered  ");
   gotoxy(23,13);
   cprintf("File Does Not Exist !!! Try Later...");
   delay(2000);
   BookMenu();
  }
  if(feof(fp))
  {
   Menu("  View Ordered  ");
   gotoxy(23,13);
   cprintf("File Does Not Exist !!! Try Later...");
   delay(2000);
   BookMenu();
  }
  rewind(fp);
  while(!feof(fp))
  {
   fscanf(fp,"%s %s %s %s %s %s %s",Bl.Ono,Bl.Bname,Bl.Bauthor,Bl.Bcat,Bl.Sname,Bl.Bqnt,Bl.Odate);
   ++n;
   if(feof(fp))
    break;
  }
  rewind(fp);
  while(!feof(fp))
  {
   START:
   textbackground(BLACK);
   textcolor(WHITE);
   clrscr();
   fscanf(fp,"%s %s %s %s %s %s %s",Bl.Ono,Bl.Bname,Bl.Bauthor,Bl.Bcat,Bl.Sname,Bl.Bqnt,Bl.Odate);
   if(feof(fp))
    break;
   Menu("  View Ordered  ");
   gotoxy(3,8);
   textcolor(RED);
   cprintf("Order No.");
   gotoxy(16,8);
   cprintf("Book Name");
   gotoxy(29,8);
   cprintf("Author");
   gotoxy(39,8);
   cprintf("Category");
   gotoxy(51,8);
   cprintf("Supplier");
   gotoxy(62,8);
   cprintf("Qty");
   gotoxy(67,8);
   cprintf("Order Date");
   textcolor(BLACK);
  for(h=10;h<=19;h++)
  {
   if(atoi(Bl.Ono)<10)
   { gotoxy(6,h); cprintf("0"); cprintf("%s",Bl.Ono);}
   else
   { gotoxy(6,h); cprintf("%s",Bl.Ono);}
   ++c;
   gotoxy(16,h); cprintf("%s",Bl.Bname);
   gotoxy(29,h); cprintf("%s",Bl.Bauthor);
   gotoxy(39,h); cprintf("%s",Bl.Bcat);
   gotoxy(51,h); cprintf("%s",Bl.Sname);
   gotoxy(62,h); cprintf("%s",Bl.Bqnt);
   gotoxy(67,h); cprintf("%s",Bl.Odate);
   if(feof(fp))
    break;
   if(c==n-1)
    break;
   if(h<19)
    fscanf(fp,"%s %s %s %s %s %s %s",Bl.Ono,Bl.Bname,Bl.Bauthor,Bl.Bcat,Bl.Sname,Bl.Bqnt,Bl.Odate);
  }
   if(feof(fp))
   {
    textcolor(BLUE);
    gotoxy(2,23); cprintf("                            No More Books Ordered !!!                        ");
    textcolor(BLACK);
    getch();
    BookMenu();
   }
   gotoxy(2,23);
   textcolor(BLUE);
   cprintf("                            Want To View More Orders?  :                     ");
   textcolor(BLACK);
   fflush(stdin);
   gotoxy(62,23);
   yes=getche();
   if(yes=='Y'||yes=='y')
    goto START;
   else
   {
    fclose(fp);
    BookMenu();
   }
  }
  if(feof(fp))
  {
   textcolor(BLUE);
   gotoxy(2,23); cprintf("                            No More Books Ordered !!!                        ");
   textcolor(BLACK);
   getch();
   BookMenu();
  }
  getch();
}




// Searches for Ordered Books using Order Code

void SearchOrder(void)
{
  int flag;
  char yes,ordno[30];
  struct Blist Bl;
  FILE *fp;
  fp=fopen("c:/LIBMAN/BookOrdr.LPW","rt");
  textbackground(BLACK);
  textcolor(WHITE);
  if(fp==NULL)
  {
   Menu("  Search Order  ");
   gotoxy(23,13);
   cprintf("File Does Not Exist !!! Try Later...");
   delay(2000);
   BookMenu();
  }
  if(feof(fp))
  {
   Menu("  Search Order  ");
   gotoxy(23,13);
   cprintf("File Does Not Exist !!! Try Later...");
   delay(2000);
   BookMenu();
  }
  START:
  textbackground(BLACK);
  textcolor(WHITE);
  Menu("  Search Order  ");
  gotoxy(24,13);
  cprintf("Enter Order Number To Search ::  ");
  scanf("%s",&ordno);
  flag=0;
  rewind(fp);
  while(!feof(fp))
  {
   clrscr();
   fscanf(fp,"%s %s %s %s %s %s %s",Bl.Ono,Bl.Bname,Bl.Bauthor,Bl.Bcat,Bl.Sname,Bl.Bqnt,Bl.Odate);
   if(feof(fp))
    break;
   if(strcmp(Bl.Ono,ordno)==0)
   {
    flag=1;
    textbackground(BLACK);
    textcolor(WHITE);
    Menu("  Search Order  ");
    gotoxy(2,5);
    textbackground(GREEN); textcolor(RED);
    cprintf(" Order Number  : %s ",Bl.Ono);
    textbackground(CYAN);  textcolor(BLACK);
    gotoxy(25,8);
    cprintf("Book Name       :: %s ",Bl.Bname);
    gotoxy(25,10);
    cprintf("Author Name     :: %s ",Bl.Bauthor);
    gotoxy(25,12);
    cprintf("Category        :: %s ",Bl.Bcat);
    gotoxy(25,14);
    cprintf("Supplier Name   :: %s ",Bl.Sname);
    gotoxy(25,16);
    cprintf("Quantity        :: %s ",Bl.Bqnt);
    gotoxy(25,18);
    cprintf("Date Of Order   :: %s ",Bl.Odate);
    break;
   }
  }
  if(flag==0)
  {
   textbackground(BLACK);
   textcolor(WHITE);
   Menu("  Search Order  ");
   gotoxy(14,13);
   textcolor(RED);
   cprintf("The Entered Order No. Does Not Exist !!! Try Later...");
   textcolor(BLACK);
   delay(2000);
   BookMenu();
  }
  gotoxy(2,23);
  textcolor(BLUE);
  cprintf("                       Want To Search More Orders?  :                        ");
  textcolor(BLACK);
  fflush(stdin);
  gotoxy(56,23);
  yes=getche();
  if(yes=='Y'||yes=='y')
   goto START;
  else
   fclose(fp);
}




// Purchases books and adds them to the list of books

void Purchase()
{
  int flag;
  long int l;
  char as[30],bs[30],cs[30],ds[30],rno[30];
  char yes,ordno[30],yes1;
  struct Blist Bl;
  FILE *fp,*ft,*fx;
  fp=fopen("c:/LIBMAN/BookOrdr.LPW","rt");
  textbackground(BLACK);
  textcolor(WHITE);
  if(fp==NULL)
  {
   Menu(" Purchase Book  ");
   gotoxy(23,13);
   cprintf("File Does Not Exist !!! Try Later...");
   delay(2000);
   BookMenu();
  }
  if(feof(fp))
  {
   Menu(" Purchase Book  ");
   gotoxy(23,13);
   cprintf("File Does Not Exist !!! Try Later...");
   delay(2000);
   BookMenu();
  }
  textbackground(BLACK);
  textcolor(WHITE);
  Menu(" Purchase Book  ");
  gotoxy(19,13);
  cprintf("Enter Order No. to Process & Purchase  ::  ");
  scanf("%s",&ordno);
  flag=0;
  rewind(fp);  /* Repositions file pointer to stream's beginning  */
  ft=fopen("c:/LIBMAN/Temp.LPW","ab+");
  fseek(ft,0,SEEK_END);
  while(!feof(fp))
  {
   textbackground(BLACK);
   textcolor(WHITE);
   clrscr();
   fscanf(fp,"%s %s %s %s %s %s %s",Bl.Ono,Bl.Bname,Bl.Bauthor,Bl.Bcat,Bl.Sname,Bl.Bqnt,Bl.Odate);
   if(feof(fp))
    break;
   if(strcmp(Bl.Ono,ordno)==0)
   {
    flag=1;
    textbackground(BLACK);
    textcolor(WHITE);
    Menu(" Purchase Book  ");
    gotoxy(3,5);
    textbackground(GREEN);
    textcolor(RED);
    cprintf("Order Number  : %s ",Bl.Ono);
    textbackground(CYAN);
    textcolor(BLACK);
    gotoxy(25,8);
    cprintf("Book Name       :: %s ",Bl.Bname);
    gotoxy(25,10);
    cprintf("Author Name     :: %s ",Bl.Bauthor);
    gotoxy(25,12);
    cprintf("Category        :: %s ",Bl.Bcat);
    gotoxy(25,14);
    cprintf("Supplier Name   :: %s ",Bl.Sname);
    gotoxy(25,16);
    cprintf("Quantity        :: %s ",Bl.Bqnt);
    gotoxy(25,18);
    cprintf("Date Of Order   :: %s ",Bl.Odate);
    gotoxy(2,22);
    textcolor(BLUE);
    cprintf("                 Are You Sure You Want to Purchase This Book?  :             ");
    fflush(stdin);
    gotoxy(67,22);
    yes=getch();
    if(yes=='y'||yes=='Y')
    {
     gotoxy(2,23);
     cprintf("                              Enter Rack No.  :                              "); gotoxy(51,23);   scanf("%s",&rno);
     strcpy(as,Bl.Bname);
     strcpy(bs,Bl.Bauthor);
     strcpy(cs,Bl.Bcat);
     strcpy(ds,Bl.Bqnt);
     fx=fopen("c:/LIBMAN/BookList.LPW","ab+");
     while(!feof(fx))
     {
      fscanf(fx,"%s %s %s %s %s %s",Bl.Bcode,Bl.Bname,Bl.Bauthor,Bl.Bcat,Bl.Brack,Bl.Bqnt);
      if(feof(fx))
       break;
     }
     l=atoi(Bl.Bcode);
     l=l+1;
     itoa(l,Bl.Bcode,10);
     rewind(fx);
     fseek(fx,0,SEEK_END);
     fprintf(fx,"%s %s %s %s %s %s\n",Bl.Bcode,as,bs,cs,rno,ds);
     fclose(fx);
     continue;
    }
    else
    {
     fprintf(ft,"%s %s %s %s %s %s %s\n",Bl.Ono,Bl.Bname,Bl.Bauthor,Bl.Bcat,Bl.Sname,Bl.Bqnt,Bl.Odate);
     fclose(ft);
     fclose(fp);
     remove("c:/LIBMAN/Temp.LPW");
     goto THIS;
    }
   }
   else
    fprintf(ft,"%s %s %s %s %s %s %s\n",Bl.Ono,Bl.Bname,Bl.Bauthor,Bl.Bcat,Bl.Sname,Bl.Bqnt,Bl.Odate);
  }
  if(flag==0)
  {
   textbackground(BLACK);
   textcolor(WHITE);
   Menu(" Purchase Book  ");
   gotoxy(14,13);
   textcolor(RED);
   cprintf("The Entered Order No. Does Not Exist !!! Try Later...");
   fclose(fp);
   fclose(ft);
   remove("c:/LIBMAN/Temp.LPW");
   delay(2000);
   BookMenu();
  }
  fclose(fp);
  fclose(ft);
  remove("c:/LIBMAN/BookOrdr.LPW");
  rename("c:/LIBMAN/Temp.LPW","c:/LIBMAN/BookOrdr.LPW");
  THIS:
  textbackground(BLACK);
  textcolor(WHITE);
  Menu(" Purchase Book  ");
  gotoxy(24,13);
  textcolor(BLUE);
  cprintf("Want to Purchase More Books?  :  ");
  fflush(stdin);
  yes1=getche();
  if(yes1=='Y'||yes1=='y')
   Purchase();
}



// Issues Books

void Issue(void)
{
  int flag,flag1;
  char yes,mcode[30],yes1,yes2,bcode[30],as[30],bs[30],cs[30];
  struct Mlist Ml;
  struct Blist Bl;
  FILE *fp,*fb,*ft;
  fp=fopen("c:/LIBMAN/Projectd.LPW","rt");
  textbackground(BLACK);
  textcolor(WHITE);
  if(fp==NULL)
  {
   Menu("Issue Book Menu ");
   gotoxy(17,13);
   cprintf("Member List File Does Not Exist !!! Try Later...");
   delay(2000);
   IBMenu();
  }
  if(feof(fp))
  {
   Menu("Issue Book Menu ");
   gotoxy(21,13);
   cprintf("Member List File Empty !!! Try Later...");
   delay(2000);
   IBMenu();
  }
  textbackground(BLACK);
  textcolor(WHITE);
  Menu("Issue Book Menu ");
  gotoxy(22,13);
  cprintf("Enter Member Code to Issue Book?  :  ");
  scanf("%s",&mcode);
  flag=0;
  rewind(fp);  /* Repositions file pointer to stream's beginning  */
  while(!feof(fp))
  {
   textbackground(BLACK);
   textcolor(WHITE);
   clrscr();
   fscanf(fp,"%s %s %s %s %s %s",Ml.code,Ml.name,Ml.cat,Ml.sex,Ml.addr,Ml.mob);
   if(feof(fp))
    break;
   if(strcmp(Ml.code,mcode)==0)
   {
    flag=1;
    textbackground(BLACK);
    textcolor(WHITE);
    Menu("Issue Book Menu ");
    gotoxy(16,8);
    cprintf(" Member Code           :: ");
    gotoxy(16,10);
    cprintf(" Member Name           :: ");
    gotoxy(16,12);
    cprintf(" Category              :: ");
    gotoxy(16,14);
    cprintf(" Gender                :: ");
    gotoxy(16,16);
    cprintf(" Address               :: ");
    gotoxy(16,18);
    cprintf(" Mobile Number         :: ");
    gotoxy(50,8); textcolor(RED); cprintf("%s",&Ml.code);  textcolor(BLACK); strcpy(as,Ml.name);
    gotoxy(50,10); cprintf("%s",&Ml.name);
    gotoxy(50,12); cprintf("%s",&Ml.cat);
    gotoxy(50,14); cprintf("%s",&Ml.sex);
    gotoxy(50,16); cprintf("%s",&Ml.addr);
    gotoxy(50,18); cprintf("%s",&Ml.mob);
    gotoxy(2,23);
    textcolor(BLUE);
    cprintf("                Do You Want to Issue this Member A Book?  :                  ");
    textcolor(BLACK);
    fflush(stdin);
    gotoxy(62,23);
    yes=getche();
    if(yes=='Y'||yes=='y' )
    {
     ft=fopen("c:/LIBMAN/BookList.LPW","rt");
     if(ft==NULL)
     {
      textbackground(BLACK);
      textcolor(WHITE);
      Menu("Issue Book Menu ");
      gotoxy(23,13);
      cprintf("File Does Not Exist !!! Try Later...");
      delay(2000);
      textbackground(BLACK);
      textcolor(WHITE);
      IBMenu();
     }
     if(feof(ft))
     {
      textbackground(BLACK);
      textcolor(WHITE);
      Menu("Issue Book Menu ");
      gotoxy(23,13);
      cprintf("File Does Not Exist !!! Try Later...");
      delay(2000);
      textbackground(BLACK);
      textcolor(WHITE);
      IBMenu();
     }
     textbackground(BLACK);
     textcolor(WHITE);
     Menu("Issue Book Menu ");
     gotoxy(27,13);
     cprintf("Enter Book Code To Issue :: ");
     scanf("%s",&bcode);
     flag1=0;
     rewind(ft);  /* Repositions file pointer to stream's beginning  */
     while(!feof(ft))
     {
      textbackground(BLACK);
      textcolor(WHITE);
      clrscr();
      fscanf(ft,"%s %s %s %s %s %s",Bl.Bcode,Bl.Bname,Bl.Bauthor,Bl.Bcat,Bl.Brack,Bl.Bqnt);
      if(feof(ft))
       break;
      if(strcmp(Bl.Bcode,bcode)==0)
      {
       flag1=1;
       textbackground(BLACK);
       textcolor(WHITE);
       Menu("Issue Book Menu ");
       gotoxy(20,8);  cprintf("Book Code           :: "); textcolor(RED); cprintf("%s ",Bl.Bcode);     strcpy(bs,Bl.Bcode);
       gotoxy(20,10); textcolor(BLACK);    cprintf("Book Name           :: %s ",Bl.Bname);     strcpy(cs,Bl.Bname);
       gotoxy(20,12);    cprintf("Author Name         :: %s ",Bl.Bauthor);
       gotoxy(20,14);    cprintf("Category            :: %s ",Bl.Bcat);
       gotoxy(20,16);    cprintf("Rack No.            :: %s ",Bl.Brack);
       gotoxy(20,18);    cprintf("Quantity            :: %s ",Bl.Bqnt);
       gotoxy(2,23);
       textcolor(BLUE);
       cprintf("                       Do You Want To Issue the member This Book?   :        ");
       textcolor(BLACK);
       fflush(stdin);
       gotoxy(72,23);
       yes2=getche();
       if(yes2=='Y'||yes2=='y' )
       {
	fb=fopen("c:/LIBMAN/IssueB.LPW","ab+");
	fseek(fb,0,SEEK_END);
	textbackground(BLACK);
	textcolor(WHITE);
	Menu("Issue Book Menu ");
	gotoxy(22,11);
	cprintf("Enter Date of Book Issuance       ::  ");
	gotoxy(22,15);
	cprintf("Enter Last Date to Deposit Book   ::  ");
	gotoxy(59,11); scanf("%s",&Bl.Idate);
	gotoxy(59,15); scanf("%s",&Bl.Ddate);
	gotoxy(2,23);
	textcolor(BLUE);
	cprintf("                   You Have Sucessfully Issued this Book ...                 ");
	textcolor(BLACK);
	fprintf(fb,"%s %s %s %s %s %s\n",mcode,as,bs,cs,Bl.Idate,Bl.Ddate);
	fclose(fb);
	delay(2000);
	textbackground(BLACK);
	textcolor(WHITE);
       }
      }
     }
     if(flag1==0)
     {
      textbackground(BLACK);
      textcolor(WHITE);
      Menu("Issue Book Menu ");
      gotoxy(3,13);
      textcolor(RED);
      cprintf("         The Entered Book Code Does Not Exist !!! Try Later ...");
      textcolor(BLACK);
      delay(2000);
      fclose(fp);
      fclose(ft);
      textbackground(BLACK);
      textcolor(WHITE);
      IBMenu();
     }
     fclose(ft);
    }
   }
  }
  if(flag==0)
  {
   textbackground(BLACK);
   textcolor(WHITE);
   Menu("Issue Book Menu ");
   gotoxy(3,13);
   textcolor(RED);
   cprintf("          The Entered Member Code Does Not Exist !!! Try Later ...");
   textcolor(BLACK);
   delay(2000);
   textbackground(BLACK);
   textcolor(WHITE);
   IBMenu();
  }
  fclose(fp);
  textbackground(BLACK);
  textcolor(WHITE);
  Menu("Issue Book Menu ");
  gotoxy(3,13);
  cprintf("                   Do You Want To Issue More Books?   :                    ");
  fflush(stdin);
  gotoxy(59,13);
  yes1=getche();
  if(yes1=='Y'||yes1=='y')
  {
   textbackground(BLACK);
   textcolor(WHITE);
   Issue();
  }
  else
   IBMenu();
}



// Shows the list of issued books (10 per view)

void ViewIssue(void)
{
  int c=0,h,n=0;
  char yes;
  struct Blist Bl;
  FILE *fp;
  fp=fopen("c:/LIBMAN/IssueB.LPW","rt");
  textbackground(BLACK);
  textcolor(WHITE);
  if(fp==NULL)
  {
   Menu("View All Issued ");
   gotoxy(28,13);
   cprintf("File Does Not Exist !!! Try Later...");
   delay(2000);
   IBMenu();
  }
  if(feof(fp))
  {
   Menu("View All Issued ");
   gotoxy(26,13);
   cprintf("File is Empty !!! Try Later...");
   delay(2000);
   IBMenu();
  }
  rewind(fp);
  while(!feof(fp))
  {
   fscanf(fp,"%s %s %s %s %s %s",Bl.Mcode,Bl.Mname,Bl.Bcode,Bl.Bname,Bl.Idate,Bl.Ddate);
   ++n;
   if(feof(fp))
    break;
  }
  rewind(fp);
  while(!feof(fp))
  {
   START:
   textbackground(BLACK);
   textcolor(WHITE);
   clrscr();
   fscanf(fp,"%s %s %s %s %s %s",Bl.Mcode,Bl.Mname,Bl.Bcode,Bl.Bname,Bl.Idate,Bl.Ddate);
   if(feof(fp))
    break;
   Menu("View All Issued ");
   gotoxy(4,7);
   textcolor(RED);
   cprintf("Member Code");
   gotoxy(16,7);
   cprintf("Member Name");
   gotoxy(29,7);
   cprintf("Book Code");
   gotoxy(40,7);
   cprintf("Book Name");
   gotoxy(52,7);
   cprintf("Issue Date");
   gotoxy(65,7);
   cprintf("Deposit Date");
   textcolor(BLACK);
  for(h=9;h<=18;h++)
  {
   if(atoi(Bl.Mcode)<10)
   { gotoxy(7,h); cprintf("0"); cprintf("%s",Bl.Mcode); }
   else
   { gotoxy(7,h); cprintf("%s",Bl.Mcode); }
   gotoxy(17,h); cprintf("%s",Bl.Mname);
   ++c;
   if(atoi(Bl.Bcode)<10)
   { gotoxy(32,h); cprintf("0"); cprintf("%s",Bl.Bcode); }
   else
   { gotoxy(32,h); cprintf("%s",Bl.Bcode); }
   gotoxy(40,h); cprintf("%s",Bl.Bname);
   gotoxy(55,h); cprintf("%s",Bl.Idate);
   gotoxy(69,h); cprintf("%s",Bl.Ddate);
   if(feof(fp))
    break;
   if(n==1)
    break;
   if(c==n-1)
    break;
   if(h<18);
    fscanf(fp,"%s %s %s %s %s %s",Bl.Mcode,Bl.Mname,Bl.Bcode,Bl.Bname,Bl.Idate,Bl.Ddate);
  }
   gotoxy(2,23);
   textcolor(BLUE);
   cprintf("                     Want To View More Issued Books?  :                      ");
   textcolor(BLACK);
   fflush(stdin);
   gotoxy(58,23);
   yes=getch();
   if(yes=='Y'||yes=='y')
    goto START;
   else
   {
    fclose(fp);
    IBMenu();
   }
  }
  if(feof(fp))
  {
   textbackground(BLACK);
   textcolor(WHITE);
   Menu("View All Issued ");
   textcolor(BLUE);
   gotoxy(2,23); cprintf("                           No More Books Issued !!!                          ");
   textcolor(BLACK);
   getch();
   IBMenu();
  }
  getch();
}



// Searches for issued books using book code

void SearchIssue(void)
{
  int flag;
  char yes,bcode[30];
  struct Blist Bl;
  FILE *fp;
  fp=fopen("c:/LIBMAN/IssueB.LPW","rt");
  textbackground(BLACK);
  textcolor(WHITE);
  if(fp==NULL)
  {
   Menu(" Search Issued  ");
   gotoxy(28,13);
   cprintf("File Does Not Exist !!! Try Later...");
   delay(2000);
   IBMenu();
  }
  if(feof(fp))
  {
   Menu(" Search Issued  ");
   gotoxy(26,13);
   cprintf("File is Empty !!! Try Later...");
   delay(2000);
   IBMenu();
  }
  START:
  textbackground(BLACK);
  textcolor(WHITE);
  Menu(" Search Issued  ");
  gotoxy(25,13);
  cprintf("Enter Book Code To Search   :   ");
  scanf("%s",&bcode);
  flag=0;
  rewind(fp);  /* Repositions file pointer to stream's beginning  */
  while(!feof(fp))
  {
   textbackground(BLACK);
   textcolor(WHITE);
   clrscr();
   fscanf(fp,"%s %s %s %s %s %s",Bl.Mcode,Bl.Mname,Bl.Bcode,Bl.Bname,Bl.Idate,Bl.Ddate);
   if(feof(fp))
    break;
   if(strcmp(Bl.Bcode,bcode)==0)
   {
    flag=1;
    Menu(" Search Issued  ");
    gotoxy(20,8);
    cprintf("Member Code         :: %s",Bl.Mcode);
    gotoxy(20,10);
    cprintf("Member Name         :: %s",Bl.Mname);
    gotoxy(20,12);
    cprintf("Book Code           :: %s",Bl.Bcode);
    gotoxy(20,14);
    cprintf("Book Name           :: %s",Bl.Bname);
    gotoxy(20,16);
    cprintf("Book Issued On      :: %s",Bl.Idate);
    gotoxy(20,18);
    cprintf("To Be Deposited On  :: %s",Bl.Ddate);
    break;
   }
  }
  if(flag==0)
  {
   textbackground(BLACK);
   textcolor(WHITE);
   Menu(" Search Issued  ");
   gotoxy(15,13);
   textcolor(BLUE);
   cprintf("The Entered Book Code was Not Found !!! Try Later...");
   textcolor(BLACK);
   delay(2000);
   IBMenu();
  }
  gotoxy(2,23);
  textcolor(BLUE);
  cprintf("                    Want To Search More Issued Books?  :                     ");
  fflush(stdin);
  textcolor(BLACK);
  gotoxy(59,23);
  yes=getche();
  if(yes=='Y'||yes=='y')
   goto START;
  else
   fclose(fp);
  IBMenu();

}




// Deposits the issued books

void Deposit(void)
{
  int flag;
  char yes,mcode[30],yes1;
  struct Blist Bl;
  FILE *fp,*fb;
  fp=fopen("c:/LIBMAN/IssueB.LPW","rt");
  textbackground(BLACK);
  textcolor(WHITE);
  if(fp==NULL)
  {
   Menu("  Deposit Book  ");
   gotoxy(23,13);
   cprintf("File Does Not Exist !!! Try Later...");
   delay(2000);
   IBMenu();
  }
  if(feof(fp))
  {
   Menu("  Deposit Book  ");
   gotoxy(26,13);
   cprintf("File is Empty !!! Try Later...");
   delay(2000);
   IBMenu();
  }
  textbackground(BLACK);
  textcolor(WHITE);
  Menu("  Deposit Book  ");
  gotoxy(21,13);
  cprintf("Enter Member Code To Deposit Book   :  ");
  scanf("%s",&mcode);
  flag=0;
  rewind(fp);  /* Repositions file pointer to stream's beginning  */
  fb=fopen("c:/LIBMAN/Temp.LPW","ab+");
  fseek(fb,0,SEEK_END);
  while(!feof(fp))
  {
   textbackground(BLACK);
   textcolor(WHITE);
   clrscr();
   fscanf(fp,"%s %s %s %s %s %s",Bl.Mcode,Bl.Mname,Bl.Bcode,Bl.Bname,Bl.Idate,Bl.Ddate);
   if(feof(fp))
    break;
   if(strcmp(Bl.Mcode,mcode)==0)
   {
    flag=1;
    Menu("  Deposit Book  ");
    gotoxy(20,8);
    cprintf("Member Code          :: %s",Bl.Mcode);
    gotoxy(20,10);
    cprintf("Member Name          :: %s",Bl.Mname);
    gotoxy(20,12);
    cprintf("Book Code            :: %s",Bl.Bcode);
    gotoxy(20,14);
    cprintf("Book Name            :: %s",Bl.Bname);
    gotoxy(20,16);
    cprintf("Book Issued On       :: %s",Bl.Idate);
    gotoxy(20,18);
    cprintf("To Be Deposited On   :: %s",Bl.Ddate);
    gotoxy(2,23);
    textcolor(BLUE);
    cprintf("                 Want To Deposit Book From This Member?   :                  ");
    textcolor(BLACK);
    gotoxy(62,23);
    fflush(stdin);
    yes=getche();
    if(yes=='N'||yes=='n')
    fprintf(fb,"%s %s %s %s %s %s\n",Bl.Mcode,Bl.Mname,Bl.Bcode,Bl.Bname,Bl.Idate,Bl.Ddate);
   }
   else
    fprintf(fb,"%s %s %s %s %s %s\n",Bl.Mcode,Bl.Mname,Bl.Bcode,Bl.Bname,Bl.Idate,Bl.Ddate);
  }
  if(flag==0)
  {
   textbackground(BLACK);
   textcolor(WHITE);
   Menu("  Deposit Book  ");
   gotoxy(3,13);
   textcolor(RED);
   cprintf("          The Entered Member Code Does Not Exist !!! Try Later ...         ");
   textcolor(BLACK);
   remove("c:/LIBMAN/Temp.LPW");
   delay(2000);
   IBMenu();
  }
  fclose(fp);
  fclose(fb);
  remove("c:/LIBMAN/IssueB.LPW");
  rename("c:/LIBMAN/Temp.LPW","c:/LIBMAN/IssueB.LPW");
  textbackground(BLACK);
  textcolor(WHITE);
  Menu("  Deposit Book  ");
  gotoxy(3,13);
  textcolor(BLUE);
  cprintf("                     Want To Deposit More Books?   :                       ");
  textcolor(BLACK);
  fflush(stdin);
  gotoxy(56,13);
  yes1=getche();
  if(yes1=='Y'||yes1=='y')
   Deposit();

}



// Creates a rectangle of the dimensions & colors specified as parameters

void rectangle(int x,int y,int l, int b,int bgcolor ,int fgcolor)
{
   int i,j,k,m;
   textbackground(bgcolor);
   textcolor(fgcolor);
   gotoxy(x,y);
   cprintf("%c",201);
   for(i=x+1;i<=l-1;i++)
   {
    gotoxy(i,y);
    cprintf("%c",205);
   }
   gotoxy(l,y);
   cprintf("%c",187);
   for(j=y+1;j<=b-1;j++)
   {
    gotoxy(l,j);
    cprintf("%c",186);
   }
   gotoxy(l,b);
   cprintf("%c",188);
   for(k=l-1;k>=x+1;k--)
   {
    gotoxy(k,b);
    cprintf("%c",205);
   }
   gotoxy(x,b);
   cprintf("%c",200);
   for(m=b-1;m>=y+1;m--)
   {
    gotoxy(x,m);
    cprintf("%c",186);
   }
}



// Fills the specified area with specified colours

void fillcolor(int x1, int y1,int x2,int y2,int color1,int color2)
{
 int i,j;
 textbackground(color1);
 textcolor(color2);
 for(i=x1;i<=x2;i++)
 {
  for(j=y1;j<=y2;j++)
  {
   gotoxy(i,j);
   cprintf("±");
  }
 }
}


// Creates a rectangle of the dimensions & colors specified as parameters

void rectangle1(int x,int y,int l, int b,int bgcolor ,int fgcolor)
{
 int i,j,k,m;
 textbackground(bgcolor);
 textcolor(fgcolor);
 gotoxy(x,y);
 cprintf("%c",218);
 for(i=x+1;i<=l-1;i++)
 {
  gotoxy(i,y);
  cprintf("%c",196);
 }
 gotoxy(l,y);
 cprintf("%c",191);
 for(j=y+1;j<=b-1;j++)
 {
  gotoxy(l,j);
  cprintf("%c",179);
 }
 gotoxy(l,b);
 cprintf("%c",217);
 for(k=l-1;k>=x+1;k--)
 {
  gotoxy(k,b);
  cprintf("%c",196);
 }
 gotoxy(x,b);
 cprintf("%c",192);
 for(m=b-1;m>=y+1;m--)
 {
  gotoxy(x,m);
  cprintf("%c",179);
 }
}



// Displays Animations on LogOut until a key is pressed

void Animation()
{
 int i=30,j=12,k=1;
 int n,m;
 clrscr();
 while(!kbhit())
 {
  n=random(i+40);
  m=random(j+20);
  if((n+26)<=80)
  {
   gotoxy(n,m);
   textcolor(k);
   textbackground(0);
   cprintf(" Library Management System ");
   gotoxy(n+25,m);
   delay(1000);
   k++;
   if(k==15)
    k=1;
   clrscr();
  }
 }
 getch();
 textcolor(WHITE);
 textbackground(BLACK);
}



// Displays LogOut curtain Animation

void CloseWindow()
{
 int i,j,k;
 clrscr();
 rectangle(1,1,79,24,0,4);
 j=2;
 while(j<=23)
 {
  i=4;
  while(i<77)
  {
   k=5;
   while(k<76)
   {
    gotoxy(i,j);
    textcolor(10);
    cprintf("³");
    textcolor(12);
    gotoxy(k,j);
    cprintf("²²");
    k=k+3;
   }
   i=i+3;
  }
  delay(60);
  j=j++;
 }
 Animation();
 textcolor(7);
 textbackground(0);
}



// Displays Login curtain Animation

void OpenWindow()
{
 int i,j,k;
 rectangle(1,1,79,24,0,4);
 j=2;
 while(j<=23)
 {
  i=4;
  while(i<77)
  {
   k=5;
   while(k<76)
   {
    gotoxy(i,j);
    textcolor(10);
    cprintf("³");
    textcolor(12);
    gotoxy(k,j);
    cprintf("²²");
    k=k+3;
   }
   i=i+3;
  }
  j=j++;
 }
 j=23;
 while(j>=2)
 {
  i=4;
  while(i<77)
  {
   k=5;
   while(k<76)
   {
    gotoxy(i,j);
    textcolor(10);
    cprintf(" ");
    textcolor(12);
    gotoxy(k,j);
    cprintf("  ");
    k=k+3;
   }
   i=i+3;
  }
  delay(60);
  j=j--;
 }
 Loading();
 textcolor(7);
 textbackground(0);
}


// Shows Loading Animation

void Loading()
{
 int x,i,j,k=1,l=1;
 clrscr();
 gotoxy(27,7);
 textcolor(RED);
 textbackground(GREEN);
 cprintf(" Library Management System ");
 rectangle(1,1,79,24,0,4);
 rectangle1(30,14,50,16,0,10);
 i=4;
 while(i<77)
 {
  gotoxy(i,2);
  textcolor(k+128);
  cprintf("*");
  gotoxy(i,22);
  cprintf("*");
  k++;
  i=i+3;
 }

 j=3;
 while(j<22)
 {
  gotoxy(4,j);
  textcolor(l+128);
  cprintf("*");
  gotoxy(76,j);
  cprintf("*");
  l++;
  j=j+1;
 }
 textcolor(7);
 gotoxy(36,18);
 cprintf("Loading");
 textcolor(7+128);
 cprintf("...");
 x=31;
 while(x<50)
 {
  textcolor(3);
  textbackground(3);
  gotoxy(x,15);
  cprintf("±");
  delay(100);
  x++;
 }
 textcolor(7);
 textbackground(0);
}


// Creates a New Directory

void MKDIR()
{
 int stat;
 stat = mkdir("c:/LIBMAN");
}
