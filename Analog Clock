/*********************************************/

/*

Title            : Analog Clock
Author           : Gaurav Anand(BCA)
Compiled on      : Borland Turbo C++ 3.0
Email Id         : gaurav@wincodebits.in
Date of Creation : 27/04/2015

Copyright(c) Gaurav Anand,2015

*/

/***********************************************/

#include <graphics.h>
#include <conio.h>
#include <dos.h>
#include <math.h>
#include <dos.h>
#include <time.h>
#include <stdlib.h>


#define X 320
#define Y 240
#define R 150
#define PI 3.14159265
#define color CYAN
#define boundary_color LIGHTRED

float angle_sec=0,angle_min=0,angle_hr=0;
int init_sec=0,init_min =0,init_hr=0;
int start_sec=0, start_min=0, start_hr=0;
float x_hr,y_hr,x_min,y_min;

void Draw_Clock()
{
char str[][3]={"12","1","2","3","4","5","6","7","8","9","10","11"};
float angle=0,x,y;

setcolor(0);
setfillstyle(SOLID_FILL,0);
circle(X,Y,3);
floodfill(X,Y,0);

setcolor(boundary_color);
setfillstyle(SOLID_FILL,boundary_color);
circle(X,Y,R+15);
floodfill(X+R+3,Y,boundary_color);

setcolor(color);
setfillstyle(SOLID_FILL,color);
circle(X,Y,R);
floodfill(X,Y,color);

setcolor(WHITE);

for(int i=1;i<=60;i++)
{
angle = angle+6*(PI/180);
x = X+(R-32)*cos(-angle);
y = Y-(R-32)*sin(-angle);

if(i%5!=0)
putpixel(x,y,15);
}

angle = 0;

for(int j=0;j<12;j++)
{
x = X+(R-30)*sin(angle)-6;
y = Y-(R-30)*cos(angle);
angle = angle+(30*(PI/180));
outtextxy(x,y,str[j]);
}

}

void Second_Hand()
{

float x,y,angle,x1,y1;
char timebuf[9];
int second;

_strtime(timebuf);

second = (timebuf[6]-48)*10+timebuf[7]-48;

if(init_sec==0)
{
angle_sec = angle_sec+(second*6)*(PI/180);
angle_sec = angle_sec-6*(PI/180);
init_sec=1;
start_sec=second;
}
else
angle_sec = angle_sec+6*(PI/180);
angle = angle_sec-6*(PI/180);

x = X+(R-50)*sin(angle_sec);
y = Y-(R-50)*cos(angle_sec);

x1 = X+(R-50)*sin(angle);
y1 = Y-(R-50)*cos(angle);

setlinestyle(0,3,1);

/* Draw line */

setcolor(BLACK);
line(X,Y,x,y);

/* Erase old line */

setcolor(color);
line(X,Y,x1,y1);


}


void Minute_Hand(int rotate)
{

float angle,x1,y1;
char timebuf[9];
int minute;

if(rotate == 1)
{

_strtime(timebuf);

minute = (timebuf[3]-48)*10+timebuf[4]-48;

if(init_min==0)
{
angle_min = angle_min+(minute*6)*(PI/180);
init_min=1;
start_min = minute;
}
else
angle_min = angle_min+6*(PI/180);
angle = angle_min-6*(PI/180);

x_min = X+(R-50)*sin(angle_min);
y_min = Y-(R-50)*cos(angle_min);

x1 = X+(R-50)*sin(angle);
y1 = Y-(R-50)*cos(angle);

setlinestyle(0,3,3);

/* Draw line */

setcolor(BLACK);
line(X,Y,x_min,y_min);

/* Erase old line */

setcolor(color);
line(X,Y,x1,y1);

}
else
{
/* Draw line */

setcolor(BLACK);
line(X,Y,x_min,y_min);

}

}

void Hour_Hand(int rotate,int min)
{

float angle,x1,y1;
char timebuf[9];
int hour;

if(rotate == 1)
{

_strtime(timebuf);

hour = (timebuf[0]-48)*10+timebuf[1]-48;
if(hour > 12)
hour = hour-12;
start_hr=hour;

if(init_hr==0)
{
angle_hr = angle_hr+((hour*30))*(PI/180);
angle_hr += (min*6)*(PI/180);
init_hr=1;
}
else
angle_hr = angle_hr+6*(PI/180);

angle = angle_hr-6*(PI/180);

x_hr = X+(R-80)*sin(angle_hr);
y_hr = Y-(R-80)*cos(angle_hr);

x1 = X+(R-80)*sin(angle);
y1 = Y-(R-80)*cos(angle);

setlinestyle(0,1,3);

/* Draw line */

setcolor(BLACK);
line(X,Y,x_hr,y_hr);

/* Erase old line */

setcolor(color);
line(X,Y,x1,y1);

}

else
{
/* Draw line */

setcolor(BLACK);
line(X,Y,x_hr,y_hr);
}


}


void main()
{
int gd = DETECT, gm;
int _min;
int degree;
char timebuff[9];

initgraph(&gd,&gm,"c://turboc3//bgi"/* path of bgi graphics*/);

settextstyle(4,0,4);
outtextxy(230,20,"Analog Clock");


settextstyle(0,0,0);

_strtime(timebuff);
outtextxy(300,430,timebuff);

/* Drawing clock, hour hand, minute hand and second hand */

Draw_Clock();
Minute_Hand(1);
Second_Hand();

_min = floor(start_min/12);

degree = start_min - (12*_min);

if(degree == 0)
degree = 1;

Hour_Hand(1,_min);

while(1){


for(int j=start_min;j<=60;j++)
{
for(int i=start_sec;i<60;i++)
{
if(kbhit())
{
closegraph();
exit(0);
}
setcolor(WHITE);

_strtime(timebuff);
outtextxy(300,430,timebuff);

/* Drawing dot at center of the clock */

setcolor(0);
setfillstyle(SOLID_FILL,0);
circle(X,Y,3);
floodfill(X,Y,0);

/* Drawing hour hand, minute hand and second hand */

Second_Hand();
Minute_Hand(0);
Hour_Hand(0,_min);

delay(1000);

setcolor(0);
outtextxy(300,430,timebuff);
}

/* Drawing minute hand after 60 seconds completed */

Minute_Hand(1);
start_sec = 0;

degree++;

if(degree %12 ==0)
Hour_Hand(1,_min);

}
start_min=1;
degree = 1;

}

}
